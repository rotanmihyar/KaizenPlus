2024-05-29 17:55:45.931 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-29 17:55:46.053 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-29 17:55:46.063 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-29 17:55:46.075 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-05-29 17:55:46.095 +03:00 [INF] No migrations were applied. The database is already up to date.
2024-05-29 17:55:46.907 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 296.1678 ms
2024-05-29 17:56:01.447 +03:00 [INF] CORS policy execution successful.
2024-05-29 17:56:01.458 +03:00 [INF] CORS policy execution successful.
2024-05-29 17:56:01.633 +03:00 [WRN] Failed to determine the https port for redirect.
2024-05-29 17:56:01.640 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-29 17:56:01.654 +03:00 [INF] Route matched with {action = "GetUsers", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse`1[System.Collections.Generic.List`1[Coachyou.Services.Users.Models.UserOutput]]] GetUsers() on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-29 17:56:01.662 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-29 17:56:02.149 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Active", "u"."CreatedDate", "u"."DateOfBirth", "u"."Email", "u"."FirstName", "u"."IsVerified", "u"."LastLoginDate", "u"."LastName", "u"."PasswordHash", "u"."PasswordSalt", "u"."PhoneNumber", "u"."Picture", "u"."RefreshToken", "u"."RefreshTokenValidUntil", "u"."Username", "t"."UserId", "t"."RoleId", "t"."Id", "t"."Name"
FROM "Users" AS "u"
LEFT JOIN (
    SELECT "u0"."UserId", "u0"."RoleId", "r"."Id", "r"."Name"
    FROM "UserRoles" AS "u0"
    INNER JOIN "Roles" AS "r" ON "u0"."RoleId" = "r"."Id"
) AS "t" ON "u"."Id" = "t"."UserId"
WHERE ("u"."Id" <> @__userId_0) AND "u"."Active"
ORDER BY "u"."Id", "t"."UserId", "t"."RoleId"
2024-05-29 17:56:02.212 +03:00 [INF] CORS policy execution successful.
2024-05-29 17:56:02.222 +03:00 [INF] CORS policy execution successful.
2024-05-29 17:56:02.223 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-29 17:56:02.237 +03:00 [INF] Route matched with {action = "Get", controller = "Warehouse"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput]] Get(kaizenplus.Services.WarehouseServices.Models.WarehouseSearch) on controller kaizenplus.Controllers.WarehouseController (kaizenplus).
2024-05-29 17:56:02.285 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-29 17:56:02.310 +03:00 [INF] Executing OkObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.Collections.Generic.List`1[[Coachyou.Services.Users.Models.UserOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-29 17:56:02.367 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Address", "t"."City", "t"."CountryId", "t"."CreatedById", "t"."CreatedDate", "t"."DeletedById", "t"."DeletionDate", "t"."IsDeleted", "t"."Name", "t"."UpdatedById", "t"."UpdatedDate", "c"."Id", "c"."Name", "w1"."Id", "w1"."CostPrice", "w1"."CreatedById", "w1"."CreatedDate", "w1"."DeletedById", "w1"."DeletionDate", "w1"."IsDeleted", "w1"."MSRPPrice", "w1"."Name", "w1"."Quantity", "w1"."SKU", "w1"."UpdatedById", "w1"."UpdatedDate", "w1"."WarehouseId"
FROM (
    SELECT "w"."Id", "w"."Address", "w"."City", "w"."CountryId", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."Name", "w"."UpdatedById", "w"."UpdatedDate", (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") AS "c"
    FROM "Warehouses" AS "w"
    WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
    ORDER BY (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") DESC
    LIMIT @__p_2 OFFSET @__p_1
) AS "t"
INNER JOIN "Country" AS "c" ON "t"."CountryId" = "c"."Id"
LEFT JOIN "WarehouseItem" AS "w1" ON "t"."Id" = "w1"."WarehouseId"
ORDER BY "t"."c" DESC, "t"."Id", "c"."Id"
2024-05-29 17:56:02.383 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.GetUsers (kaizenplus) in 724.7673ms
2024-05-29 17:56:02.384 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-29 17:56:02.384 +03:00 [INF] HTTP GET /api/Account/GetUsers responded 200 in 754.2286 ms
2024-05-29 17:56:02.438 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Warehouses" AS "w"
WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
2024-05-29 17:56:02.439 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-29 17:56:02.451 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseController.Get (kaizenplus) in 213.6895ms
2024-05-29 17:56:02.451 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-29 17:56:02.451 +03:00 [INF] HTTP POST /api/Warehouse/search responded 200 in 228.8409 ms
2024-05-29 17:56:02.644 +03:00 [INF] CORS policy execution successful.
2024-05-29 17:56:02.650 +03:00 [INF] CORS policy execution successful.
2024-05-29 17:56:02.651 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus)'
2024-05-29 17:56:02.654 +03:00 [INF] Route matched with {action = "Get", controller = "WarehouseItems"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemsOutput]] Get(kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemSearch) on controller kaizenplus.Controllers.WarehouseItemsController (kaizenplus).
2024-05-29 17:56:02.655 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-29 17:56:02.672 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "w"."Id", "w"."CostPrice", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."MSRPPrice", "w"."Name", "w"."Quantity", "w"."SKU", "w"."UpdatedById", "w"."UpdatedDate", "w"."WarehouseId", "w0"."Id", "w0"."Address", "w0"."City", "w0"."CountryId", "w0"."CreatedById", "w0"."CreatedDate", "w0"."DeletedById", "w0"."DeletionDate", "w0"."IsDeleted", "w0"."Name", "w0"."UpdatedById", "w0"."UpdatedDate"
FROM "WarehouseItem" AS "w"
INNER JOIN "Warehouses" AS "w0" ON "w"."WarehouseId" = "w0"."Id"
WHERE (NOT ("w"."IsDeleted") AND NOT ("w0"."IsDeleted")) AND (((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."SKU", @__search_Search_0) > 0)))
ORDER BY "w"."Quantity" DESC
LIMIT @__p_2 OFFSET @__p_1
2024-05-29 17:56:02.675 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "WarehouseItem" AS "w"
INNER JOIN "Warehouses" AS "w0" ON "w"."WarehouseId" = "w0"."Id"
WHERE (NOT ("w"."IsDeleted") AND NOT ("w0"."IsDeleted")) AND (((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."SKU", @__search_Search_0) > 0)))
2024-05-29 17:56:02.676 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemsOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-29 17:56:02.694 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus) in 39.2262ms
2024-05-29 17:56:02.694 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus)'
2024-05-29 17:56:02.694 +03:00 [INF] HTTP POST /api/WarehouseItems/search responded 200 in 42.8574 ms
2024-05-29 17:56:02.751 +03:00 [INF] CORS policy execution successful.
2024-05-29 17:56:02.751 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-29 17:56:02.752 +03:00 [INF] Route matched with {action = "Get", controller = "Warehouse"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput]] Get(kaizenplus.Services.WarehouseServices.Models.WarehouseSearch) on controller kaizenplus.Controllers.WarehouseController (kaizenplus).
2024-05-29 17:56:02.752 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-29 17:56:02.757 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Address", "t"."City", "t"."CountryId", "t"."CreatedById", "t"."CreatedDate", "t"."DeletedById", "t"."DeletionDate", "t"."IsDeleted", "t"."Name", "t"."UpdatedById", "t"."UpdatedDate", "c"."Id", "c"."Name", "w1"."Id", "w1"."CostPrice", "w1"."CreatedById", "w1"."CreatedDate", "w1"."DeletedById", "w1"."DeletionDate", "w1"."IsDeleted", "w1"."MSRPPrice", "w1"."Name", "w1"."Quantity", "w1"."SKU", "w1"."UpdatedById", "w1"."UpdatedDate", "w1"."WarehouseId"
FROM (
    SELECT "w"."Id", "w"."Address", "w"."City", "w"."CountryId", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."Name", "w"."UpdatedById", "w"."UpdatedDate", (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") AS "c"
    FROM "Warehouses" AS "w"
    WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
    ORDER BY (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") DESC
    LIMIT @__p_2 OFFSET @__p_1
) AS "t"
INNER JOIN "Country" AS "c" ON "t"."CountryId" = "c"."Id"
LEFT JOIN "WarehouseItem" AS "w1" ON "t"."Id" = "w1"."WarehouseId"
ORDER BY "t"."c" DESC, "t"."Id", "c"."Id"
2024-05-29 17:56:02.757 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Warehouses" AS "w"
WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
2024-05-29 17:56:02.757 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-29 17:56:02.758 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseController.Get (kaizenplus) in 5.8502ms
2024-05-29 17:56:02.758 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-29 17:56:02.758 +03:00 [INF] HTTP POST /api/Warehouse/search responded 200 in 6.1749 ms
2024-05-29 17:56:03.619 +03:00 [INF] CORS policy execution successful.
2024-05-29 17:56:03.619 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-29 17:56:03.620 +03:00 [INF] Route matched with {action = "Get", controller = "Warehouse"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput]] Get(kaizenplus.Services.WarehouseServices.Models.WarehouseSearch) on controller kaizenplus.Controllers.WarehouseController (kaizenplus).
2024-05-29 17:56:03.623 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-29 17:56:03.626 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Address", "t"."City", "t"."CountryId", "t"."CreatedById", "t"."CreatedDate", "t"."DeletedById", "t"."DeletionDate", "t"."IsDeleted", "t"."Name", "t"."UpdatedById", "t"."UpdatedDate", "c"."Id", "c"."Name", "w1"."Id", "w1"."CostPrice", "w1"."CreatedById", "w1"."CreatedDate", "w1"."DeletedById", "w1"."DeletionDate", "w1"."IsDeleted", "w1"."MSRPPrice", "w1"."Name", "w1"."Quantity", "w1"."SKU", "w1"."UpdatedById", "w1"."UpdatedDate", "w1"."WarehouseId"
FROM (
    SELECT "w"."Id", "w"."Address", "w"."City", "w"."CountryId", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."Name", "w"."UpdatedById", "w"."UpdatedDate", (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") AS "c"
    FROM "Warehouses" AS "w"
    WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
    ORDER BY (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") DESC
    LIMIT @__p_2 OFFSET @__p_1
) AS "t"
INNER JOIN "Country" AS "c" ON "t"."CountryId" = "c"."Id"
LEFT JOIN "WarehouseItem" AS "w1" ON "t"."Id" = "w1"."WarehouseId"
ORDER BY "t"."c" DESC, "t"."Id", "c"."Id"
2024-05-29 17:56:03.627 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Warehouses" AS "w"
WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
2024-05-29 17:56:03.628 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-29 17:56:03.628 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseController.Get (kaizenplus) in 8.2752ms
2024-05-29 17:56:03.628 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-29 17:56:03.628 +03:00 [INF] HTTP POST /api/Warehouse/search responded 200 in 8.4079 ms
2024-05-29 17:56:03.955 +03:00 [INF] CORS policy execution successful.
2024-05-29 17:56:03.956 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-29 17:56:03.956 +03:00 [INF] Route matched with {action = "GetUsers", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse`1[System.Collections.Generic.List`1[Coachyou.Services.Users.Models.UserOutput]]] GetUsers() on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-29 17:56:03.956 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-29 17:56:03.957 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Active", "u"."CreatedDate", "u"."DateOfBirth", "u"."Email", "u"."FirstName", "u"."IsVerified", "u"."LastLoginDate", "u"."LastName", "u"."PasswordHash", "u"."PasswordSalt", "u"."PhoneNumber", "u"."Picture", "u"."RefreshToken", "u"."RefreshTokenValidUntil", "u"."Username", "t"."UserId", "t"."RoleId", "t"."Id", "t"."Name"
FROM "Users" AS "u"
LEFT JOIN (
    SELECT "u0"."UserId", "u0"."RoleId", "r"."Id", "r"."Name"
    FROM "UserRoles" AS "u0"
    INNER JOIN "Roles" AS "r" ON "u0"."RoleId" = "r"."Id"
) AS "t" ON "u"."Id" = "t"."UserId"
WHERE ("u"."Id" <> @__userId_0) AND "u"."Active"
ORDER BY "u"."Id", "t"."UserId", "t"."RoleId"
2024-05-29 17:56:03.958 +03:00 [INF] Executing OkObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.Collections.Generic.List`1[[Coachyou.Services.Users.Models.UserOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-29 17:56:03.958 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.GetUsers (kaizenplus) in 2.041ms
2024-05-29 17:56:03.958 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-29 17:56:03.958 +03:00 [INF] HTTP GET /api/Account/GetUsers responded 200 in 2.2676 ms
