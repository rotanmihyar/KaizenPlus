// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kaizenplus.DataAccess;

#nullable disable

namespace kaizenplus.Migrations
{
    [DbContext(typeof(DatabaseService))]
    [Migration("20240527115234_User")]
    partial class User
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("kaizenplus.Domain.Roles.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Management"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Auditor"
                        });
                });

            modelBuilder.Entity("kaizenplus.Domain.UserRoles.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("8240573d-becc-4aae-b2ab-974979de96a1"),
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("kaizenplus.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Picture")
                        .HasColumnType("TEXT");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RefreshTokenValidUntil")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8240573d-becc-4aae-b2ab-974979de96a1"),
                            Active = true,
                            CreatedDate = new DateTime(1989, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@happywarehouse.com",
                            FirstName = "system",
                            IsVerified = true,
                            LastName = "admin",
                            PasswordHash = new byte[] { 16, 166, 184, 83, 125, 25, 246, 113, 187, 67, 23, 247, 238, 80, 5, 246, 44, 158, 130, 87, 81, 103, 206, 160, 31, 168, 46, 192, 84, 132, 30, 191, 232, 208, 234, 154, 194, 144, 224, 112, 58, 249, 39, 72, 222, 61, 207, 175, 14, 17, 118, 215, 212, 204, 222, 148, 145, 208, 43, 171, 2, 63, 130, 162 },
                            PasswordSalt = new byte[] { 194, 148, 148, 64, 217, 88, 55, 149, 187, 44, 5, 149, 228, 229, 196, 153, 16, 30, 204, 41, 178, 30, 190, 93, 54, 38, 45, 14, 248, 96, 160, 123, 164, 72, 189, 98, 101, 72, 90, 29, 57, 13, 251, 53, 168, 123, 68, 101, 198, 251, 53, 29, 56, 56, 161, 14, 142, 80, 230, 58, 169, 52, 206, 254, 150, 63, 26, 41, 41, 178, 180, 147, 51, 31, 223, 225, 130, 49, 183, 245, 55, 158, 170, 13, 194, 178, 128, 104, 132, 205, 253, 170, 57, 177, 54, 225, 34, 148, 25, 158, 201, 82, 90, 212, 161, 169, 134, 108, 217, 209, 242, 88, 111, 32, 86, 193, 5, 181, 92, 244, 253, 17, 77, 55, 232, 227, 50, 23 },
                            PhoneNumber = "07950430205",
                            Username = "admin@happywarehouse.com"
                        });
                });

            modelBuilder.Entity("kaizenplus.Domain.UserRoles.UserRole", b =>
                {
                    b.HasOne("kaizenplus.Domain.Roles.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kaizenplus.Domain.Users.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("kaizenplus.Domain.Roles.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("kaizenplus.Domain.Users.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
