2024-05-29 17:55:45.931 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-29 17:55:46.053 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-29 17:55:46.063 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-29 17:55:46.075 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-05-29 17:55:46.095 +03:00 [INF] No migrations were applied. The database is already up to date.
2024-05-29 17:55:46.907 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 296.1678 ms
2024-05-29 17:56:01.447 +03:00 [INF] CORS policy execution successful.
2024-05-29 17:56:01.458 +03:00 [INF] CORS policy execution successful.
2024-05-29 17:56:01.633 +03:00 [WRN] Failed to determine the https port for redirect.
2024-05-29 17:56:01.640 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-29 17:56:01.654 +03:00 [INF] Route matched with {action = "GetUsers", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse`1[System.Collections.Generic.List`1[Coachyou.Services.Users.Models.UserOutput]]] GetUsers() on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-29 17:56:01.662 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-29 17:56:02.149 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Active", "u"."CreatedDate", "u"."DateOfBirth", "u"."Email", "u"."FirstName", "u"."IsVerified", "u"."LastLoginDate", "u"."LastName", "u"."PasswordHash", "u"."PasswordSalt", "u"."PhoneNumber", "u"."Picture", "u"."RefreshToken", "u"."RefreshTokenValidUntil", "u"."Username", "t"."UserId", "t"."RoleId", "t"."Id", "t"."Name"
FROM "Users" AS "u"
LEFT JOIN (
    SELECT "u0"."UserId", "u0"."RoleId", "r"."Id", "r"."Name"
    FROM "UserRoles" AS "u0"
    INNER JOIN "Roles" AS "r" ON "u0"."RoleId" = "r"."Id"
) AS "t" ON "u"."Id" = "t"."UserId"
WHERE ("u"."Id" <> @__userId_0) AND "u"."Active"
ORDER BY "u"."Id", "t"."UserId", "t"."RoleId"
2024-05-29 17:56:02.212 +03:00 [INF] CORS policy execution successful.
2024-05-29 17:56:02.222 +03:00 [INF] CORS policy execution successful.
2024-05-29 17:56:02.223 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-29 17:56:02.237 +03:00 [INF] Route matched with {action = "Get", controller = "Warehouse"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput]] Get(kaizenplus.Services.WarehouseServices.Models.WarehouseSearch) on controller kaizenplus.Controllers.WarehouseController (kaizenplus).
2024-05-29 17:56:02.285 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-29 17:56:02.310 +03:00 [INF] Executing OkObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.Collections.Generic.List`1[[Coachyou.Services.Users.Models.UserOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-29 17:56:02.367 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Address", "t"."City", "t"."CountryId", "t"."CreatedById", "t"."CreatedDate", "t"."DeletedById", "t"."DeletionDate", "t"."IsDeleted", "t"."Name", "t"."UpdatedById", "t"."UpdatedDate", "c"."Id", "c"."Name", "w1"."Id", "w1"."CostPrice", "w1"."CreatedById", "w1"."CreatedDate", "w1"."DeletedById", "w1"."DeletionDate", "w1"."IsDeleted", "w1"."MSRPPrice", "w1"."Name", "w1"."Quantity", "w1"."SKU", "w1"."UpdatedById", "w1"."UpdatedDate", "w1"."WarehouseId"
FROM (
    SELECT "w"."Id", "w"."Address", "w"."City", "w"."CountryId", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."Name", "w"."UpdatedById", "w"."UpdatedDate", (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") AS "c"
    FROM "Warehouses" AS "w"
    WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
    ORDER BY (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") DESC
    LIMIT @__p_2 OFFSET @__p_1
) AS "t"
INNER JOIN "Country" AS "c" ON "t"."CountryId" = "c"."Id"
LEFT JOIN "WarehouseItem" AS "w1" ON "t"."Id" = "w1"."WarehouseId"
ORDER BY "t"."c" DESC, "t"."Id", "c"."Id"
2024-05-29 17:56:02.383 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.GetUsers (kaizenplus) in 724.7673ms
2024-05-29 17:56:02.384 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-29 17:56:02.384 +03:00 [INF] HTTP GET /api/Account/GetUsers responded 200 in 754.2286 ms
2024-05-29 17:56:02.438 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Warehouses" AS "w"
WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
2024-05-29 17:56:02.439 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-29 17:56:02.451 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseController.Get (kaizenplus) in 213.6895ms
2024-05-29 17:56:02.451 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-29 17:56:02.451 +03:00 [INF] HTTP POST /api/Warehouse/search responded 200 in 228.8409 ms
2024-05-29 17:56:02.644 +03:00 [INF] CORS policy execution successful.
2024-05-29 17:56:02.650 +03:00 [INF] CORS policy execution successful.
2024-05-29 17:56:02.651 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus)'
2024-05-29 17:56:02.654 +03:00 [INF] Route matched with {action = "Get", controller = "WarehouseItems"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemsOutput]] Get(kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemSearch) on controller kaizenplus.Controllers.WarehouseItemsController (kaizenplus).
2024-05-29 17:56:02.655 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-29 17:56:02.672 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "w"."Id", "w"."CostPrice", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."MSRPPrice", "w"."Name", "w"."Quantity", "w"."SKU", "w"."UpdatedById", "w"."UpdatedDate", "w"."WarehouseId", "w0"."Id", "w0"."Address", "w0"."City", "w0"."CountryId", "w0"."CreatedById", "w0"."CreatedDate", "w0"."DeletedById", "w0"."DeletionDate", "w0"."IsDeleted", "w0"."Name", "w0"."UpdatedById", "w0"."UpdatedDate"
FROM "WarehouseItem" AS "w"
INNER JOIN "Warehouses" AS "w0" ON "w"."WarehouseId" = "w0"."Id"
WHERE (NOT ("w"."IsDeleted") AND NOT ("w0"."IsDeleted")) AND (((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."SKU", @__search_Search_0) > 0)))
ORDER BY "w"."Quantity" DESC
LIMIT @__p_2 OFFSET @__p_1
2024-05-29 17:56:02.675 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "WarehouseItem" AS "w"
INNER JOIN "Warehouses" AS "w0" ON "w"."WarehouseId" = "w0"."Id"
WHERE (NOT ("w"."IsDeleted") AND NOT ("w0"."IsDeleted")) AND (((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."SKU", @__search_Search_0) > 0)))
2024-05-29 17:56:02.676 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemsOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-29 17:56:02.694 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus) in 39.2262ms
2024-05-29 17:56:02.694 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus)'
2024-05-29 17:56:02.694 +03:00 [INF] HTTP POST /api/WarehouseItems/search responded 200 in 42.8574 ms
2024-05-29 17:56:02.751 +03:00 [INF] CORS policy execution successful.
2024-05-29 17:56:02.751 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-29 17:56:02.752 +03:00 [INF] Route matched with {action = "Get", controller = "Warehouse"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput]] Get(kaizenplus.Services.WarehouseServices.Models.WarehouseSearch) on controller kaizenplus.Controllers.WarehouseController (kaizenplus).
2024-05-29 17:56:02.752 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-29 17:56:02.757 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Address", "t"."City", "t"."CountryId", "t"."CreatedById", "t"."CreatedDate", "t"."DeletedById", "t"."DeletionDate", "t"."IsDeleted", "t"."Name", "t"."UpdatedById", "t"."UpdatedDate", "c"."Id", "c"."Name", "w1"."Id", "w1"."CostPrice", "w1"."CreatedById", "w1"."CreatedDate", "w1"."DeletedById", "w1"."DeletionDate", "w1"."IsDeleted", "w1"."MSRPPrice", "w1"."Name", "w1"."Quantity", "w1"."SKU", "w1"."UpdatedById", "w1"."UpdatedDate", "w1"."WarehouseId"
FROM (
    SELECT "w"."Id", "w"."Address", "w"."City", "w"."CountryId", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."Name", "w"."UpdatedById", "w"."UpdatedDate", (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") AS "c"
    FROM "Warehouses" AS "w"
    WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
    ORDER BY (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") DESC
    LIMIT @__p_2 OFFSET @__p_1
) AS "t"
INNER JOIN "Country" AS "c" ON "t"."CountryId" = "c"."Id"
LEFT JOIN "WarehouseItem" AS "w1" ON "t"."Id" = "w1"."WarehouseId"
ORDER BY "t"."c" DESC, "t"."Id", "c"."Id"
2024-05-29 17:56:02.757 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Warehouses" AS "w"
WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
2024-05-29 17:56:02.757 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-29 17:56:02.758 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseController.Get (kaizenplus) in 5.8502ms
2024-05-29 17:56:02.758 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-29 17:56:02.758 +03:00 [INF] HTTP POST /api/Warehouse/search responded 200 in 6.1749 ms
2024-05-29 17:56:03.619 +03:00 [INF] CORS policy execution successful.
2024-05-29 17:56:03.619 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-29 17:56:03.620 +03:00 [INF] Route matched with {action = "Get", controller = "Warehouse"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput]] Get(kaizenplus.Services.WarehouseServices.Models.WarehouseSearch) on controller kaizenplus.Controllers.WarehouseController (kaizenplus).
2024-05-29 17:56:03.623 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-29 17:56:03.626 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Address", "t"."City", "t"."CountryId", "t"."CreatedById", "t"."CreatedDate", "t"."DeletedById", "t"."DeletionDate", "t"."IsDeleted", "t"."Name", "t"."UpdatedById", "t"."UpdatedDate", "c"."Id", "c"."Name", "w1"."Id", "w1"."CostPrice", "w1"."CreatedById", "w1"."CreatedDate", "w1"."DeletedById", "w1"."DeletionDate", "w1"."IsDeleted", "w1"."MSRPPrice", "w1"."Name", "w1"."Quantity", "w1"."SKU", "w1"."UpdatedById", "w1"."UpdatedDate", "w1"."WarehouseId"
FROM (
    SELECT "w"."Id", "w"."Address", "w"."City", "w"."CountryId", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."Name", "w"."UpdatedById", "w"."UpdatedDate", (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") AS "c"
    FROM "Warehouses" AS "w"
    WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
    ORDER BY (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") DESC
    LIMIT @__p_2 OFFSET @__p_1
) AS "t"
INNER JOIN "Country" AS "c" ON "t"."CountryId" = "c"."Id"
LEFT JOIN "WarehouseItem" AS "w1" ON "t"."Id" = "w1"."WarehouseId"
ORDER BY "t"."c" DESC, "t"."Id", "c"."Id"
2024-05-29 17:56:03.627 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Warehouses" AS "w"
WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
2024-05-29 17:56:03.628 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-29 17:56:03.628 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseController.Get (kaizenplus) in 8.2752ms
2024-05-29 17:56:03.628 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-29 17:56:03.628 +03:00 [INF] HTTP POST /api/Warehouse/search responded 200 in 8.4079 ms
2024-05-29 17:56:03.955 +03:00 [INF] CORS policy execution successful.
2024-05-29 17:56:03.956 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-29 17:56:03.956 +03:00 [INF] Route matched with {action = "GetUsers", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse`1[System.Collections.Generic.List`1[Coachyou.Services.Users.Models.UserOutput]]] GetUsers() on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-29 17:56:03.956 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-29 17:56:03.957 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Active", "u"."CreatedDate", "u"."DateOfBirth", "u"."Email", "u"."FirstName", "u"."IsVerified", "u"."LastLoginDate", "u"."LastName", "u"."PasswordHash", "u"."PasswordSalt", "u"."PhoneNumber", "u"."Picture", "u"."RefreshToken", "u"."RefreshTokenValidUntil", "u"."Username", "t"."UserId", "t"."RoleId", "t"."Id", "t"."Name"
FROM "Users" AS "u"
LEFT JOIN (
    SELECT "u0"."UserId", "u0"."RoleId", "r"."Id", "r"."Name"
    FROM "UserRoles" AS "u0"
    INNER JOIN "Roles" AS "r" ON "u0"."RoleId" = "r"."Id"
) AS "t" ON "u"."Id" = "t"."UserId"
WHERE ("u"."Id" <> @__userId_0) AND "u"."Active"
ORDER BY "u"."Id", "t"."UserId", "t"."RoleId"
2024-05-29 17:56:03.958 +03:00 [INF] Executing OkObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.Collections.Generic.List`1[[Coachyou.Services.Users.Models.UserOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-29 17:56:03.958 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.GetUsers (kaizenplus) in 2.041ms
2024-05-29 17:56:03.958 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-29 17:56:03.958 +03:00 [INF] HTTP GET /api/Account/GetUsers responded 200 in 2.2676 ms
2024-05-30 13:35:45.961 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 13:35:46.266 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 13:35:46.277 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 13:35:46.291 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-05-30 13:35:46.309 +03:00 [INF] No migrations were applied. The database is already up to date.
2024-05-30 13:35:48.203 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 413.6032 ms
2024-05-30 13:35:48.207 +03:00 [INF] The file /swagger-ui.css was not modified
2024-05-30 13:35:48.207 +03:00 [INF] The file /swagger-ui-standalone-preset.js was not modified
2024-05-30 13:35:48.207 +03:00 [INF] The file /swagger-ui-bundle.js was not modified
2024-05-30 13:35:48.210 +03:00 [INF] HTTP GET /swagger/swagger-ui-standalone-preset.js responded 304 in 13.7595 ms
2024-05-30 13:35:48.210 +03:00 [INF] HTTP GET /swagger/swagger-ui.css responded 304 in 28.9598 ms
2024-05-30 13:35:48.210 +03:00 [INF] HTTP GET /swagger/swagger-ui-bundle.js responded 304 in 13.7594 ms
2024-05-30 13:38:21.380 +03:00 [INF] CORS policy execution failed.
2024-05-30 13:38:21.381 +03:00 [INF] Request origin http://localhost:5000 does not have permission to access the resource.
2024-05-30 13:38:21.394 +03:00 [INF] Sending file. Request path: '/index.bd5948f8.css'. Physical path: 'N/A'
2024-05-30 13:38:21.394 +03:00 [INF] Sending file. Request path: '/index.9b3ac848.css'. Physical path: 'N/A'
2024-05-30 13:38:21.394 +03:00 [INF] Sending file. Request path: '/index.5c6a759e.js'. Physical path: 'N/A'
2024-05-30 13:38:21.394 +03:00 [INF] Sending file. Request path: '/index.f3c6f60d.css'. Physical path: 'N/A'
2024-05-30 13:38:21.394 +03:00 [INF] Sending file. Request path: '/index.8cc832e3.css'. Physical path: 'N/A'
2024-05-30 13:38:21.631 +03:00 [INF] CORS policy execution failed.
2024-05-30 13:38:21.631 +03:00 [INF] Request origin http://localhost:5000 does not have permission to access the resource.
2024-05-30 13:38:21.634 +03:00 [INF] Sending file. Request path: '/fa-solid-900.1f6e23c0.woff2'. Physical path: 'N/A'
2024-05-30 13:38:21.995 +03:00 [WRN] Failed to determine the https port for redirect.
2024-05-30 13:38:21.995 +03:00 [INF] HTTP GET /favicon.ico responded 404 in 8.7760 ms
2024-05-30 13:38:40.774 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 6.8381 ms
2024-05-30 13:38:47.299 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-30 13:38:47.314 +03:00 [INF] Route matched with {action = "GetUsers", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse`1[System.Collections.Generic.List`1[Coachyou.Services.Users.Models.UserOutput]]] GetUsers() on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-30 13:38:47.415 +03:00 [INF] Authorization failed for the request at filter 'kaizenplus.Attributes.AppAuthorizeAttribute'.
2024-05-30 13:38:47.418 +03:00 [INF] Executing UnauthorizedObjectResult, writing value of type 'kaizenplus.Models.BaseResponse'.
2024-05-30 13:38:47.439 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.GetUsers (kaizenplus) in 119.9265ms
2024-05-30 13:38:47.440 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-30 13:38:47.440 +03:00 [INF] HTTP GET /api/Account/GetUsers responded 401 in 143.9974 ms
2024-05-30 13:39:01.390 +03:00 [INF] HTTP GET / responded 404 in 0.0069 ms
2024-05-30 13:39:02.557 +03:00 [INF] HTTP GET / responded 404 in 0.0049 ms
2024-05-30 13:39:04.296 +03:00 [ERR] A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
 ---> System.ComponentModel.Win32Exception (53): The network path was not found.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 433
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.GetLogsAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.FetchDataAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.FetchLogsAsync(HttpContext httpContext)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.GetLogsAsync(HttpContext httpContext)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:53,State:0,Class:20
2024-05-30 13:39:04.296 +03:00 [ERR] A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
 ---> System.ComponentModel.Win32Exception (53): The network path was not found.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 433
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.GetLogsAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.FetchDataAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.FetchLogsAsync(HttpContext httpContext)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.GetLogsAsync(HttpContext httpContext)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:53,State:0,Class:20
2024-05-30 13:39:04.296 +03:00 [ERR] A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
 ---> System.ComponentModel.Win32Exception (53): The network path was not found.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 433
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.GetLogsAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.FetchDataAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.FetchLogsAsync(HttpContext httpContext)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.GetLogsAsync(HttpContext httpContext)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:53,State:0,Class:20
2024-05-30 13:39:04.296 +03:00 [ERR] A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
 ---> System.ComponentModel.Win32Exception (53): The network path was not found.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 433
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.GetLogsAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.FetchDataAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.FetchLogsAsync(HttpContext httpContext)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.GetLogsAsync(HttpContext httpContext)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:53,State:0,Class:20
2024-05-30 13:39:04.296 +03:00 [ERR] A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
 ---> System.ComponentModel.Win32Exception (53): The network path was not found.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 433
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.GetLogsAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.FetchDataAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.FetchLogsAsync(HttpContext httpContext)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.GetLogsAsync(HttpContext httpContext)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:53,State:0,Class:20
2024-05-30 13:39:04.296 +03:00 [ERR] A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
 ---> System.ComponentModel.Win32Exception (53): The network path was not found.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 433
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.GetLogsAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.FetchDataAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.FetchLogsAsync(HttpContext httpContext)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.GetLogsAsync(HttpContext httpContext)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:53,State:0,Class:20
2024-05-30 13:39:06.425 +03:00 [ERR] A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
 ---> System.ComponentModel.Win32Exception (53): The network path was not found.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 433
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.GetLogsAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.FetchDataAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.FetchLogsAsync(HttpContext httpContext)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.GetLogsAsync(HttpContext httpContext)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:53,State:0,Class:20
2024-05-30 13:39:14.327 +03:00 [INF] Sending file. Request path: '/index.bd5948f8.css.map'. Physical path: 'N/A'
2024-05-30 13:39:14.328 +03:00 [INF] Sending file. Request path: '/index.5c6a759e.js.map'. Physical path: 'N/A'
2024-05-30 13:39:14.329 +03:00 [INF] Sending file. Request path: '/index.9b3ac848.css.map'. Physical path: 'N/A'
2024-05-30 13:39:14.332 +03:00 [INF] Sending file. Request path: '/index.8cc832e3.css.map'. Physical path: 'N/A'
2024-05-30 13:39:14.341 +03:00 [INF] Sending file. Request path: '/index.f3c6f60d.css.map'. Physical path: 'N/A'
2024-05-30 13:39:34.628 +03:00 [INF] CORS policy execution failed.
2024-05-30 13:39:34.628 +03:00 [INF] Request origin http://localhost:5000 does not have permission to access the resource.
2024-05-30 13:39:34.628 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.Register (kaizenplus)'
2024-05-30 13:39:34.647 +03:00 [INF] Route matched with {action = "Register", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse`1[System.Guid]]] Register(kaizenplus.Services.Users.Models.UserRegisterInput) on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-30 13:39:34.655 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 13:39:35.116 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__input_Email_0='?' (Size = 6)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Active", "u"."CreatedDate", "u"."DateOfBirth", "u"."Email", "u"."FirstName", "u"."IsVerified", "u"."LastLoginDate", "u"."LastName", "u"."PasswordHash", "u"."PasswordSalt", "u"."PhoneNumber", "u"."Picture", "u"."RefreshToken", "u"."RefreshTokenValidUntil", "u"."Username"
FROM "Users" AS "u"
WHERE "u"."Email" = @__input_Email_0
LIMIT 1
2024-05-30 13:39:35.133 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Users" AS "u"
2024-05-30 13:39:35.373 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?' (Size = 6), @p5='?' (Size = 6), @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (Size = 64) (DbType = Binary), @p10='?' (Size = 128) (DbType = Binary), @p11='?' (Size = 6), @p12='?', @p13='?', @p14='?' (DbType = DateTime), @p15='?' (Size = 6)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Users" ("Id", "Active", "CreatedDate", "DateOfBirth", "Email", "FirstName", "IsVerified", "LastLoginDate", "LastName", "PasswordHash", "PasswordSalt", "PhoneNumber", "Picture", "RefreshToken", "RefreshTokenValidUntil", "Username")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15);
2024-05-30 13:39:35.384 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p16='?' (DbType = Int32), @p17='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserRoles" ("RoleId", "UserId")
VALUES (@p16, @p17);
2024-05-30 13:39:35.409 +03:00 [INF] Executing OkObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.Guid, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-30 13:39:35.417 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.Register (kaizenplus) in 770.5639ms
2024-05-30 13:39:35.417 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.Register (kaizenplus)'
2024-05-30 13:39:35.417 +03:00 [INF] HTTP POST /api/Account/register responded 200 in 788.8116 ms
2024-05-30 13:39:57.143 +03:00 [ERR] A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
 ---> System.ComponentModel.Win32Exception (53): The network path was not found.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 433
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.GetLogsAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.FetchDataAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.FetchLogsAsync(HttpContext httpContext)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.GetLogsAsync(HttpContext httpContext)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:53,State:0,Class:20
2024-05-30 13:39:57.143 +03:00 [ERR] A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
 ---> System.ComponentModel.Win32Exception (53): The network path was not found.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 433
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.GetLogsAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.FetchDataAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.FetchLogsAsync(HttpContext httpContext)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.GetLogsAsync(HttpContext httpContext)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:53,State:0,Class:20
2024-05-30 13:39:57.144 +03:00 [ERR] A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
 ---> System.ComponentModel.Win32Exception (53): The network path was not found.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 433
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.GetLogsAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.FetchDataAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.FetchLogsAsync(HttpContext httpContext)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.GetLogsAsync(HttpContext httpContext)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:53,State:0,Class:20
2024-05-30 13:39:57.456 +03:00 [ERR] A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
 ---> System.ComponentModel.Win32Exception (53): The network path was not found.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 433
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.GetLogsAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.MsSqlServerProvider.SqlServerDataProvider.FetchDataAsync(Int32 page, Int32 count, String level, String searchCriteria, Nullable`1 startDate, Nullable`1 endDate)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.FetchLogsAsync(HttpContext httpContext)
   at Serilog.Ui.Web.Endpoints.SerilogUiEndpoints.GetLogsAsync(HttpContext httpContext)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:53,State:0,Class:20
2024-05-30 13:49:57.143 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 13:49:57.255 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 13:49:57.264 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 13:49:57.276 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-05-30 13:49:57.292 +03:00 [INF] No migrations were applied. The database is already up to date.
2024-05-30 13:49:58.217 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 245.5460 ms
2024-05-30 13:50:49.591 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 13:50:49.697 +03:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 13:50:49.706 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 13:50:49.717 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-05-30 13:50:49.733 +03:00 [INF] No migrations were applied. The database is already up to date.
2024-05-30 13:50:50.448 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 234.9814 ms
2024-05-30 13:54:14.005 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 13:54:14.111 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 13:54:14.121 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 13:54:14.135 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-05-30 13:54:14.152 +03:00 [INF] No migrations were applied. The database is already up to date.
2024-05-30 13:54:15.815 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 256.1440 ms
2024-05-30 13:56:54.227 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 13:56:54.333 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 13:56:54.343 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 13:56:54.356 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-05-30 13:56:54.374 +03:00 [INF] No migrations were applied. The database is already up to date.
2024-05-30 13:56:55.435 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 246.8997 ms
2024-05-30 13:57:57.594 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 13:57:57.701 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 13:57:57.711 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 13:57:57.723 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-05-30 13:57:57.740 +03:00 [INF] No migrations were applied. The database is already up to date.
2024-05-30 13:57:58.570 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 233.0737 ms
2024-05-30 14:00:18.947 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:00:19.075 +03:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 14:00:19.087 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 14:00:19.100 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-05-30 14:00:19.117 +03:00 [INF] No migrations were applied. The database is already up to date.
2024-05-30 14:00:19.799 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 234.7613 ms
2024-05-30 14:03:54.093 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:03:54.214 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 14:03:54.227 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 14:03:54.245 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-05-30 14:03:54.265 +03:00 [INF] No migrations were applied. The database is already up to date.
2024-05-30 14:03:55.245 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 242.8821 ms
2024-05-30 14:05:09.555 +03:00 [INF] CORS policy execution failed.
2024-05-30 14:05:09.564 +03:00 [INF] Request origin http://localhost:5000 does not have permission to access the resource.
2024-05-30 14:05:09.569 +03:00 [WRN] Failed to determine the https port for redirect.
2024-05-30 14:05:09.572 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.Register (kaizenplus)'
2024-05-30 14:05:09.602 +03:00 [INF] Route matched with {action = "Register", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse`1[System.Guid]]] Register(kaizenplus.Services.Users.Models.UserRegisterInput) on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-30 14:05:09.611 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:05:10.058 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__input_Email_0='?' (Size = 6)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Active", "u"."CreatedDate", "u"."DateOfBirth", "u"."Email", "u"."FirstName", "u"."IsVerified", "u"."LastLoginDate", "u"."LastName", "u"."PasswordHash", "u"."PasswordSalt", "u"."PhoneNumber", "u"."Picture", "u"."RefreshToken", "u"."RefreshTokenValidUntil", "u"."Username"
FROM "Users" AS "u"
WHERE "u"."Email" = @__input_Email_0
LIMIT 1
2024-05-30 14:05:10.240 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p3='?' (DbType = Guid), @p0='?' (DbType = DateTime), @p1='?' (Size = 64) (DbType = Binary), @p2='?' (Size = 128) (DbType = Binary)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Users" SET "DateOfBirth" = @p0, "PasswordHash" = @p1, "PasswordSalt" = @p2
WHERE "Id" = @p3;
SELECT changes();
2024-05-30 14:05:10.302 +03:00 [INF] Executing OkObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.Guid, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-30 14:05:10.349 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.Register (kaizenplus) in 742.5914ms
2024-05-30 14:05:10.350 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.Register (kaizenplus)'
2024-05-30 14:05:10.350 +03:00 [INF] HTTP POST /api/Account/register responded 200 in 782.3615 ms
2024-05-30 14:06:07.721 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:06:07.829 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 14:06:07.843 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 14:06:07.857 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-05-30 14:06:07.879 +03:00 [INF] No migrations were applied. The database is already up to date.
2024-05-30 14:06:09.642 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 252.9033 ms
2024-05-30 14:06:14.948 +03:00 [INF] CORS policy execution failed.
2024-05-30 14:06:14.955 +03:00 [INF] Request origin http://localhost:5000 does not have permission to access the resource.
2024-05-30 14:06:14.960 +03:00 [WRN] Failed to determine the https port for redirect.
2024-05-30 14:06:14.962 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.Register (kaizenplus)'
2024-05-30 14:06:14.986 +03:00 [INF] Route matched with {action = "Register", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse`1[System.Guid]]] Register(kaizenplus.Services.Users.Models.UserRegisterInput) on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-30 14:06:14.994 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:06:15.410 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__input_Email_0='?' (Size = 6)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Active", "u"."CreatedDate", "u"."DateOfBirth", "u"."Email", "u"."FirstName", "u"."IsVerified", "u"."LastLoginDate", "u"."LastName", "u"."PasswordHash", "u"."PasswordSalt", "u"."PhoneNumber", "u"."Picture", "u"."RefreshToken", "u"."RefreshTokenValidUntil", "u"."Username"
FROM "Users" AS "u"
WHERE "u"."Email" = @__input_Email_0
LIMIT 1
2024-05-30 14:06:15.593 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p3='?' (DbType = Guid), @p0='?' (DbType = DateTime), @p1='?' (Size = 64) (DbType = Binary), @p2='?' (Size = 128) (DbType = Binary)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Users" SET "DateOfBirth" = @p0, "PasswordHash" = @p1, "PasswordSalt" = @p2
WHERE "Id" = @p3;
SELECT changes();
2024-05-30 14:06:15.646 +03:00 [INF] Executing OkObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.Guid, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-30 14:06:15.694 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.Register (kaizenplus) in 703.2598ms
2024-05-30 14:06:15.695 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.Register (kaizenplus)'
2024-05-30 14:06:15.695 +03:00 [INF] HTTP POST /api/Account/register responded 200 in 736.8719 ms
2024-05-30 14:06:49.408 +03:00 [INF] CORS policy execution failed.
2024-05-30 14:06:49.408 +03:00 [INF] Request origin http://localhost:5000 does not have permission to access the resource.
2024-05-30 14:06:49.408 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.NewPassword (kaizenplus)'
2024-05-30 14:06:49.412 +03:00 [INF] Route matched with {action = "NewPassword", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse]] NewPassword(kaizenplus.Services.Users.Models.NewPasswordInput) on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-30 14:06:49.419 +03:00 [INF] Authorization failed for the request at filter 'kaizenplus.Attributes.AppAuthorizeAttribute'.
2024-05-30 14:06:49.419 +03:00 [INF] Executing UnauthorizedObjectResult, writing value of type 'kaizenplus.Models.BaseResponse'.
2024-05-30 14:06:49.421 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.NewPassword (kaizenplus) in 8.9747ms
2024-05-30 14:06:49.421 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.NewPassword (kaizenplus)'
2024-05-30 14:06:49.421 +03:00 [INF] HTTP POST /api/Account/newPassword responded 401 in 12.8393 ms
2024-05-30 14:06:51.578 +03:00 [INF] CORS policy execution failed.
2024-05-30 14:06:51.579 +03:00 [INF] Request origin http://localhost:5000 does not have permission to access the resource.
2024-05-30 14:06:51.579 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.NewPassword (kaizenplus)'
2024-05-30 14:06:51.579 +03:00 [INF] Route matched with {action = "NewPassword", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse]] NewPassword(kaizenplus.Services.Users.Models.NewPasswordInput) on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-30 14:06:51.580 +03:00 [INF] Authorization failed for the request at filter 'kaizenplus.Attributes.AppAuthorizeAttribute'.
2024-05-30 14:06:51.580 +03:00 [INF] Executing UnauthorizedObjectResult, writing value of type 'kaizenplus.Models.BaseResponse'.
2024-05-30 14:06:51.580 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.NewPassword (kaizenplus) in 1.4438ms
2024-05-30 14:06:51.580 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.NewPassword (kaizenplus)'
2024-05-30 14:06:51.580 +03:00 [INF] HTTP POST /api/Account/newPassword responded 401 in 1.7192 ms
2024-05-30 14:06:51.725 +03:00 [INF] CORS policy execution failed.
2024-05-30 14:06:51.725 +03:00 [INF] Request origin http://localhost:5000 does not have permission to access the resource.
2024-05-30 14:06:51.725 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.NewPassword (kaizenplus)'
2024-05-30 14:06:51.725 +03:00 [INF] Route matched with {action = "NewPassword", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse]] NewPassword(kaizenplus.Services.Users.Models.NewPasswordInput) on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-30 14:06:51.725 +03:00 [INF] Authorization failed for the request at filter 'kaizenplus.Attributes.AppAuthorizeAttribute'.
2024-05-30 14:06:51.725 +03:00 [INF] Executing UnauthorizedObjectResult, writing value of type 'kaizenplus.Models.BaseResponse'.
2024-05-30 14:06:51.725 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.NewPassword (kaizenplus) in 0.1057ms
2024-05-30 14:06:51.725 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.NewPassword (kaizenplus)'
2024-05-30 14:06:51.725 +03:00 [INF] HTTP POST /api/Account/newPassword responded 401 in 0.2040 ms
2024-05-30 14:06:51.853 +03:00 [INF] CORS policy execution failed.
2024-05-30 14:06:51.853 +03:00 [INF] Request origin http://localhost:5000 does not have permission to access the resource.
2024-05-30 14:06:51.853 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.NewPassword (kaizenplus)'
2024-05-30 14:06:51.853 +03:00 [INF] Route matched with {action = "NewPassword", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse]] NewPassword(kaizenplus.Services.Users.Models.NewPasswordInput) on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-30 14:06:51.853 +03:00 [INF] Authorization failed for the request at filter 'kaizenplus.Attributes.AppAuthorizeAttribute'.
2024-05-30 14:06:51.853 +03:00 [INF] Executing UnauthorizedObjectResult, writing value of type 'kaizenplus.Models.BaseResponse'.
2024-05-30 14:06:51.853 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.NewPassword (kaizenplus) in 0.1626ms
2024-05-30 14:06:51.853 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.NewPassword (kaizenplus)'
2024-05-30 14:06:51.853 +03:00 [INF] HTTP POST /api/Account/newPassword responded 401 in 0.3149 ms
2024-05-30 14:06:52.006 +03:00 [INF] CORS policy execution failed.
2024-05-30 14:06:52.006 +03:00 [INF] Request origin http://localhost:5000 does not have permission to access the resource.
2024-05-30 14:06:52.006 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.NewPassword (kaizenplus)'
2024-05-30 14:06:52.006 +03:00 [INF] Route matched with {action = "NewPassword", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse]] NewPassword(kaizenplus.Services.Users.Models.NewPasswordInput) on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-30 14:06:52.006 +03:00 [INF] Authorization failed for the request at filter 'kaizenplus.Attributes.AppAuthorizeAttribute'.
2024-05-30 14:06:52.006 +03:00 [INF] Executing UnauthorizedObjectResult, writing value of type 'kaizenplus.Models.BaseResponse'.
2024-05-30 14:06:52.006 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.NewPassword (kaizenplus) in 0.1134ms
2024-05-30 14:06:52.006 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.NewPassword (kaizenplus)'
2024-05-30 14:06:52.006 +03:00 [INF] HTTP POST /api/Account/newPassword responded 401 in 0.2110 ms
2024-05-30 14:06:52.120 +03:00 [INF] CORS policy execution failed.
2024-05-30 14:06:52.120 +03:00 [INF] Request origin http://localhost:5000 does not have permission to access the resource.
2024-05-30 14:06:52.120 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.NewPassword (kaizenplus)'
2024-05-30 14:06:52.120 +03:00 [INF] Route matched with {action = "NewPassword", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse]] NewPassword(kaizenplus.Services.Users.Models.NewPasswordInput) on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-30 14:06:52.120 +03:00 [INF] Authorization failed for the request at filter 'kaizenplus.Attributes.AppAuthorizeAttribute'.
2024-05-30 14:06:52.120 +03:00 [INF] Executing UnauthorizedObjectResult, writing value of type 'kaizenplus.Models.BaseResponse'.
2024-05-30 14:06:52.121 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.NewPassword (kaizenplus) in 0.1075ms
2024-05-30 14:06:52.121 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.NewPassword (kaizenplus)'
2024-05-30 14:06:52.121 +03:00 [INF] HTTP POST /api/Account/newPassword responded 401 in 0.2293 ms
2024-05-30 14:21:04.442 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:21:04.545 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 14:21:04.554 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 14:21:04.566 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-05-30 14:21:04.583 +03:00 [INF] No migrations were applied. The database is already up to date.
2024-05-30 14:21:05.679 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 259.1234 ms
2024-05-30 14:21:14.175 +03:00 [WRN] Failed to determine the https port for redirect.
2024-05-30 14:21:14.186 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:21:14.197 +03:00 [INF] Route matched with {action = "Getlogger", controller = "File"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[System.String] Getlogger() on controller kaizenplus.Controllers.FileController (kaizenplus).
2024-05-30 14:22:03.116 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:22:03.221 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 14:22:03.231 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 14:22:03.243 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-05-30 14:22:03.261 +03:00 [INF] No migrations were applied. The database is already up to date.
2024-05-30 14:22:04.351 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 235.6066 ms
2024-05-30 14:22:15.566 +03:00 [WRN] Failed to determine the https port for redirect.
2024-05-30 14:22:15.574 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:22:15.585 +03:00 [INF] Route matched with {action = "Getlogger", controller = "File"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[System.String] Getlogger() on controller kaizenplus.Controllers.FileController (kaizenplus).
2024-05-30 14:31:03.446 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:31:03.565 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 14:31:03.574 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 14:31:03.586 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-05-30 14:31:03.603 +03:00 [INF] No migrations were applied. The database is already up to date.
2024-05-30 14:31:04.461 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 243.6323 ms
2024-05-30 14:31:21.886 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:31:22.003 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 14:31:22.013 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 14:31:22.024 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-05-30 14:31:22.040 +03:00 [INF] No migrations were applied. The database is already up to date.
2024-05-30 14:31:22.841 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 240.8994 ms
2024-05-30 14:31:29.516 +03:00 [WRN] Failed to determine the https port for redirect.
2024-05-30 14:31:29.524 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:31:29.535 +03:00 [INF] Route matched with {action = "Getlogger", controller = "File"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[System.String] Getlogger() on controller kaizenplus.Controllers.FileController (kaizenplus).
2024-05-30 14:31:29.564 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-30 14:31:29.604 +03:00 [INF] Executed action kaizenplus.Controllers.FileController.Getlogger (kaizenplus) in 64.7909ms
2024-05-30 14:31:29.605 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:31:29.605 +03:00 [INF] HTTP GET /api/file/logger responded 200 in 90.9215 ms
2024-05-30 14:31:45.850 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:31:45.850 +03:00 [INF] Route matched with {action = "Getlogger", controller = "File"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[System.String] Getlogger() on controller kaizenplus.Controllers.FileController (kaizenplus).
2024-05-30 14:33:04.062 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-30 14:33:04.065 +03:00 [INF] Executed action kaizenplus.Controllers.FileController.Getlogger (kaizenplus) in 78214.7614ms
2024-05-30 14:33:04.065 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:33:04.065 +03:00 [INF] HTTP GET /api/file/logger responded 200 in 78215.0938 ms
2024-05-30 14:33:05.090 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 5.4925 ms
2024-05-30 14:33:05.271 +03:00 [INF] The file /favicon-32x32.png was not modified
2024-05-30 14:33:05.271 +03:00 [INF] HTTP GET /swagger/favicon-32x32.png responded 304 in 7.8850 ms
2024-05-30 14:33:11.353 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:33:11.354 +03:00 [INF] Route matched with {action = "Getlogger", controller = "File"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[System.String] Getlogger() on controller kaizenplus.Controllers.FileController (kaizenplus).
2024-05-30 14:33:16.217 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-30 14:33:16.219 +03:00 [INF] Executed action kaizenplus.Controllers.FileController.Getlogger (kaizenplus) in 4865.0052ms
2024-05-30 14:33:16.219 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:33:16.219 +03:00 [INF] HTTP GET /api/file/logger responded 200 in 4866.0260 ms
2024-05-30 14:33:48.963 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:33:48.963 +03:00 [INF] Route matched with {action = "Getlogger", controller = "File"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[System.String] Getlogger() on controller kaizenplus.Controllers.FileController (kaizenplus).
2024-05-30 14:35:23.980 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-30 14:35:23.988 +03:00 [INF] Executed action kaizenplus.Controllers.FileController.Getlogger (kaizenplus) in 95024.7347ms
2024-05-30 14:35:23.989 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:35:23.991 +03:00 [INF] HTTP GET /api/file/logger responded 200 in 95027.8008 ms
2024-05-30 14:40:21.537 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:40:21.633 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 14:40:21.645 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 14:40:21.658 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-05-30 14:40:21.683 +03:00 [INF] No migrations were applied. The database is already up to date.
2024-05-30 14:40:22.608 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 226.6644 ms
2024-05-30 14:41:31.618 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:41:31.631 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:41:31.850 +03:00 [WRN] Failed to determine the https port for redirect.
2024-05-30 14:41:31.856 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:41:31.866 +03:00 [INF] Route matched with {action = "Getlogger", controller = "File"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[System.String] Getlogger() on controller kaizenplus.Controllers.FileController (kaizenplus).
2024-05-30 14:41:38.372 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-30 14:41:38.427 +03:00 [INF] Executed action kaizenplus.Controllers.FileController.Getlogger (kaizenplus) in 6555.9879ms
2024-05-30 14:41:38.429 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:41:38.430 +03:00 [INF] HTTP GET /api/file/logger responded 200 in 6581.4974 ms
2024-05-30 14:41:52.309 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:41:52.312 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:41:52.312 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:41:52.312 +03:00 [INF] Route matched with {action = "Getlogger", controller = "File"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[System.String] Getlogger() on controller kaizenplus.Controllers.FileController (kaizenplus).
2024-05-30 14:41:52.320 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-30 14:41:52.321 +03:00 [INF] Executed action kaizenplus.Controllers.FileController.Getlogger (kaizenplus) in 8.8392ms
2024-05-30 14:41:52.321 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:41:52.322 +03:00 [INF] HTTP GET /api/file/logger responded 200 in 9.6475 ms
2024-05-30 14:43:04.041 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:43:04.046 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:43:04.047 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:43:04.047 +03:00 [INF] Route matched with {action = "Getlogger", controller = "File"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[System.String] Getlogger() on controller kaizenplus.Controllers.FileController (kaizenplus).
2024-05-30 14:43:04.057 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-30 14:43:04.059 +03:00 [INF] Executed action kaizenplus.Controllers.FileController.Getlogger (kaizenplus) in 12.0636ms
2024-05-30 14:43:04.059 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:43:04.059 +03:00 [INF] HTTP GET /api/file/logger responded 200 in 12.8840 ms
2024-05-30 14:43:17.243 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:43:17.246 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:43:17.246 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:43:17.246 +03:00 [INF] Route matched with {action = "Getlogger", controller = "File"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[System.String] Getlogger() on controller kaizenplus.Controllers.FileController (kaizenplus).
2024-05-30 14:43:17.254 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-30 14:43:17.255 +03:00 [INF] Executed action kaizenplus.Controllers.FileController.Getlogger (kaizenplus) in 9.3129ms
2024-05-30 14:43:17.256 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:43:17.256 +03:00 [INF] HTTP GET /api/file/logger responded 200 in 9.8359 ms
2024-05-30 14:58:50.514 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:58:50.625 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 14:58:50.635 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 14:58:50.648 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-05-30 14:58:50.665 +03:00 [INF] No migrations were applied. The database is already up to date.
2024-05-30 14:58:52.254 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 268.1806 ms
2024-05-30 14:59:15.367 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:59:15.377 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:59:15.540 +03:00 [WRN] Failed to determine the https port for redirect.
2024-05-30 14:59:15.546 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:59:15.556 +03:00 [INF] Route matched with {action = "Getlogger", controller = "File"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[System.String] Getlogger() on controller kaizenplus.Controllers.FileController (kaizenplus).
2024-05-30 14:59:15.591 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-30 14:59:15.643 +03:00 [INF] Executed action kaizenplus.Controllers.FileController.Getlogger (kaizenplus) in 81.6457ms
2024-05-30 14:59:15.645 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:59:15.645 +03:00 [INF] HTTP GET /api/file/logger responded 200 in 106.6063 ms
2024-05-30 14:59:16.705 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:59:16.710 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:59:16.711 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-30 14:59:16.712 +03:00 [INF] Route matched with {action = "GetUsers", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse`1[System.Collections.Generic.List`1[Coachyou.Services.Users.Models.UserOutput]]] GetUsers() on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-30 14:59:16.720 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:59:17.227 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Active", "u"."CreatedDate", "u"."DateOfBirth", "u"."Email", "u"."FirstName", "u"."IsVerified", "u"."LastLoginDate", "u"."LastName", "u"."PasswordHash", "u"."PasswordSalt", "u"."PhoneNumber", "u"."Picture", "u"."RefreshToken", "u"."RefreshTokenValidUntil", "u"."Username", "t"."UserId", "t"."RoleId", "t"."Id", "t"."Name"
FROM "Users" AS "u"
LEFT JOIN (
    SELECT "u0"."UserId", "u0"."RoleId", "r"."Id", "r"."Name"
    FROM "UserRoles" AS "u0"
    INNER JOIN "Roles" AS "r" ON "u0"."RoleId" = "r"."Id"
) AS "t" ON "u"."Id" = "t"."UserId"
WHERE ("u"."Id" <> @__userId_0) AND "u"."Active"
ORDER BY "u"."Id", "t"."UserId", "t"."RoleId"
2024-05-30 14:59:17.339 +03:00 [INF] Executing OkObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.Collections.Generic.List`1[[Coachyou.Services.Users.Models.UserOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-30 14:59:17.367 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.GetUsers (kaizenplus) in 654.7932ms
2024-05-30 14:59:17.367 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-30 14:59:17.367 +03:00 [INF] HTTP GET /api/Account/GetUsers responded 200 in 656.1704 ms
2024-05-30 14:59:35.402 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:59:35.404 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:59:35.404 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.Authenticate (kaizenplus)'
2024-05-30 14:59:35.418 +03:00 [INF] Route matched with {action = "Authenticate", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse`1[kaizenplus.Services.Users.Models.UserAuthenticateOutput]]] Authenticate(kaizenplus.Services.Users.Models.UserAuthenticateInput) on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-30 14:59:35.457 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:59:35.499 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__input_Username_0='?' (Size = 21)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Active", "t"."CreatedDate", "t"."DateOfBirth", "t"."Email", "t"."FirstName", "t"."IsVerified", "t"."LastLoginDate", "t"."LastName", "t"."PasswordHash", "t"."PasswordSalt", "t"."PhoneNumber", "t"."Picture", "t"."RefreshToken", "t"."RefreshTokenValidUntil", "t"."Username", "t0"."UserId", "t0"."RoleId", "t0"."Id", "t0"."Name"
FROM (
    SELECT "u"."Id", "u"."Active", "u"."CreatedDate", "u"."DateOfBirth", "u"."Email", "u"."FirstName", "u"."IsVerified", "u"."LastLoginDate", "u"."LastName", "u"."PasswordHash", "u"."PasswordSalt", "u"."PhoneNumber", "u"."Picture", "u"."RefreshToken", "u"."RefreshTokenValidUntil", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Username" = @__input_Username_0
    LIMIT 1
) AS "t"
LEFT JOIN (
    SELECT "u0"."UserId", "u0"."RoleId", "r"."Id", "r"."Name"
    FROM "UserRoles" AS "u0"
    INNER JOIN "Roles" AS "r" ON "u0"."RoleId" = "r"."Id"
) AS "t0" ON "t"."Id" = "t0"."UserId"
ORDER BY "t"."Id", "t0"."UserId", "t0"."RoleId"
2024-05-30 14:59:35.617 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p15='?' (DbType = Guid), @p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (Size = 21), @p4='?' (Size = 5), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime), @p7='?' (Size = 6), @p8='?' (Size = 64) (DbType = Binary), @p9='?' (Size = 128) (DbType = Binary), @p10='?' (Size = 14), @p11='?', @p12='?' (Size = 44), @p13='?' (DbType = DateTime), @p14='?' (Size = 21)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Users" SET "Active" = @p0, "CreatedDate" = @p1, "DateOfBirth" = @p2, "Email" = @p3, "FirstName" = @p4, "IsVerified" = @p5, "LastLoginDate" = @p6, "LastName" = @p7, "PasswordHash" = @p8, "PasswordSalt" = @p9, "PhoneNumber" = @p10, "Picture" = @p11, "RefreshToken" = @p12, "RefreshTokenValidUntil" = @p13, "Username" = @p14
WHERE "Id" = @p15;
SELECT changes();
2024-05-30 14:59:35.666 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (Size = 44), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Users" SET "RefreshToken" = @p0, "RefreshTokenValidUntil" = @p1
WHERE "Id" = @p2;
SELECT changes();
2024-05-30 14:59:35.670 +03:00 [INF] Executing OkObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Services.Users.Models.UserAuthenticateOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 14:59:35.673 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.Authenticate (kaizenplus) in 255.0584ms
2024-05-30 14:59:35.673 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.Authenticate (kaizenplus)'
2024-05-30 14:59:35.673 +03:00 [INF] HTTP POST /api/Account/authenticate responded 200 in 268.5242 ms
2024-05-30 14:59:38.371 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:59:38.377 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:59:38.378 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:59:38.378 +03:00 [INF] Route matched with {action = "Getlogger", controller = "File"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[System.String] Getlogger() on controller kaizenplus.Controllers.FileController (kaizenplus).
2024-05-30 14:59:38.379 +03:00 [INF] Authorization failed for the request at filter 'kaizenplus.Attributes.AppAuthorizeAttribute'.
2024-05-30 14:59:38.379 +03:00 [INF] Executing ForbiddenObejctResult, writing value of type 'kaizenplus.Models.BaseResponse'.
2024-05-30 14:59:38.381 +03:00 [INF] Executed action kaizenplus.Controllers.FileController.Getlogger (kaizenplus) in 2.9233ms
2024-05-30 14:59:38.381 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.FileController.Getlogger (kaizenplus)'
2024-05-30 14:59:38.381 +03:00 [INF] HTTP GET /api/file/logger responded 403 in 3.2641 ms
2024-05-30 14:59:46.803 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:59:46.805 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:59:46.806 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 14:59:46.807 +03:00 [INF] Route matched with {action = "Get", controller = "Warehouse"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput]] Get(kaizenplus.Services.WarehouseServices.Models.WarehouseSearch) on controller kaizenplus.Controllers.WarehouseController (kaizenplus).
2024-05-30 14:59:46.807 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:59:46.848 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Address", "t"."City", "t"."CountryId", "t"."CreatedById", "t"."CreatedDate", "t"."DeletedById", "t"."DeletionDate", "t"."IsDeleted", "t"."Name", "t"."UpdatedById", "t"."UpdatedDate", "c"."Id", "c"."Name", "w1"."Id", "w1"."CostPrice", "w1"."CreatedById", "w1"."CreatedDate", "w1"."DeletedById", "w1"."DeletionDate", "w1"."IsDeleted", "w1"."MSRPPrice", "w1"."Name", "w1"."Quantity", "w1"."SKU", "w1"."UpdatedById", "w1"."UpdatedDate", "w1"."WarehouseId"
FROM (
    SELECT "w"."Id", "w"."Address", "w"."City", "w"."CountryId", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."Name", "w"."UpdatedById", "w"."UpdatedDate", (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") AS "c"
    FROM "Warehouses" AS "w"
    WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
    ORDER BY (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") DESC
    LIMIT @__p_2 OFFSET @__p_1
) AS "t"
INNER JOIN "Country" AS "c" ON "t"."CountryId" = "c"."Id"
LEFT JOIN "WarehouseItem" AS "w1" ON "t"."Id" = "w1"."WarehouseId"
ORDER BY "t"."c" DESC, "t"."Id", "c"."Id"
2024-05-30 14:59:46.898 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Warehouses" AS "w"
WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
2024-05-30 14:59:46.899 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 14:59:46.910 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseController.Get (kaizenplus) in 102.4896ms
2024-05-30 14:59:46.910 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 14:59:46.910 +03:00 [INF] HTTP POST /api/Warehouse/search responded 200 in 104.1010 ms
2024-05-30 14:59:47.595 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:59:47.599 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:59:47.599 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-30 14:59:47.599 +03:00 [INF] Route matched with {action = "GetUsers", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse`1[System.Collections.Generic.List`1[Coachyou.Services.Users.Models.UserOutput]]] GetUsers() on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-30 14:59:47.601 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:59:47.609 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Active", "u"."CreatedDate", "u"."DateOfBirth", "u"."Email", "u"."FirstName", "u"."IsVerified", "u"."LastLoginDate", "u"."LastName", "u"."PasswordHash", "u"."PasswordSalt", "u"."PhoneNumber", "u"."Picture", "u"."RefreshToken", "u"."RefreshTokenValidUntil", "u"."Username", "t"."UserId", "t"."RoleId", "t"."Id", "t"."Name"
FROM "Users" AS "u"
LEFT JOIN (
    SELECT "u0"."UserId", "u0"."RoleId", "r"."Id", "r"."Name"
    FROM "UserRoles" AS "u0"
    INNER JOIN "Roles" AS "r" ON "u0"."RoleId" = "r"."Id"
) AS "t" ON "u"."Id" = "t"."UserId"
WHERE ("u"."Id" <> @__userId_0) AND "u"."Active"
ORDER BY "u"."Id", "t"."UserId", "t"."RoleId"
2024-05-30 14:59:47.609 +03:00 [INF] Executing OkObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.Collections.Generic.List`1[[Coachyou.Services.Users.Models.UserOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-30 14:59:47.609 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.GetUsers (kaizenplus) in 10.4864ms
2024-05-30 14:59:47.609 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-30 14:59:47.609 +03:00 [INF] HTTP GET /api/Account/GetUsers responded 200 in 10.5956 ms
2024-05-30 14:59:48.598 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:59:48.598 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 14:59:48.598 +03:00 [INF] Route matched with {action = "Get", controller = "Warehouse"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput]] Get(kaizenplus.Services.WarehouseServices.Models.WarehouseSearch) on controller kaizenplus.Controllers.WarehouseController (kaizenplus).
2024-05-30 14:59:48.599 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:59:48.600 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Address", "t"."City", "t"."CountryId", "t"."CreatedById", "t"."CreatedDate", "t"."DeletedById", "t"."DeletionDate", "t"."IsDeleted", "t"."Name", "t"."UpdatedById", "t"."UpdatedDate", "c"."Id", "c"."Name", "w1"."Id", "w1"."CostPrice", "w1"."CreatedById", "w1"."CreatedDate", "w1"."DeletedById", "w1"."DeletionDate", "w1"."IsDeleted", "w1"."MSRPPrice", "w1"."Name", "w1"."Quantity", "w1"."SKU", "w1"."UpdatedById", "w1"."UpdatedDate", "w1"."WarehouseId"
FROM (
    SELECT "w"."Id", "w"."Address", "w"."City", "w"."CountryId", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."Name", "w"."UpdatedById", "w"."UpdatedDate", (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") AS "c"
    FROM "Warehouses" AS "w"
    WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
    ORDER BY (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") DESC
    LIMIT @__p_2 OFFSET @__p_1
) AS "t"
INNER JOIN "Country" AS "c" ON "t"."CountryId" = "c"."Id"
LEFT JOIN "WarehouseItem" AS "w1" ON "t"."Id" = "w1"."WarehouseId"
ORDER BY "t"."c" DESC, "t"."Id", "c"."Id"
2024-05-30 14:59:48.601 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Warehouses" AS "w"
WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
2024-05-30 14:59:48.601 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 14:59:48.601 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseController.Get (kaizenplus) in 2.4438ms
2024-05-30 14:59:48.601 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 14:59:48.601 +03:00 [INF] HTTP POST /api/Warehouse/search responded 200 in 2.5849 ms
2024-05-30 14:59:49.553 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:59:49.557 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:59:49.558 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus)'
2024-05-30 14:59:49.559 +03:00 [INF] Route matched with {action = "Get", controller = "WarehouseItems"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemsOutput]] Get(kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemSearch) on controller kaizenplus.Controllers.WarehouseItemsController (kaizenplus).
2024-05-30 14:59:49.559 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:59:49.572 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "w"."Id", "w"."CostPrice", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."MSRPPrice", "w"."Name", "w"."Quantity", "w"."SKU", "w"."UpdatedById", "w"."UpdatedDate", "w"."WarehouseId", "w0"."Id", "w0"."Address", "w0"."City", "w0"."CountryId", "w0"."CreatedById", "w0"."CreatedDate", "w0"."DeletedById", "w0"."DeletionDate", "w0"."IsDeleted", "w0"."Name", "w0"."UpdatedById", "w0"."UpdatedDate"
FROM "WarehouseItem" AS "w"
INNER JOIN "Warehouses" AS "w0" ON "w"."WarehouseId" = "w0"."Id"
WHERE (NOT ("w"."IsDeleted") AND NOT ("w0"."IsDeleted")) AND (((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."SKU", @__search_Search_0) > 0)))
ORDER BY "w"."Quantity" DESC
LIMIT @__p_2 OFFSET @__p_1
2024-05-30 14:59:49.575 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "WarehouseItem" AS "w"
INNER JOIN "Warehouses" AS "w0" ON "w"."WarehouseId" = "w0"."Id"
WHERE (NOT ("w"."IsDeleted") AND NOT ("w0"."IsDeleted")) AND (((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."SKU", @__search_Search_0) > 0)))
2024-05-30 14:59:49.575 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemsOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 14:59:49.591 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus) in 32.7011ms
2024-05-30 14:59:49.591 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus)'
2024-05-30 14:59:49.591 +03:00 [INF] HTTP POST /api/WarehouseItems/search responded 200 in 33.9035 ms
2024-05-30 14:59:49.628 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:59:49.628 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 14:59:49.628 +03:00 [INF] Route matched with {action = "Get", controller = "Warehouse"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput]] Get(kaizenplus.Services.WarehouseServices.Models.WarehouseSearch) on controller kaizenplus.Controllers.WarehouseController (kaizenplus).
2024-05-30 14:59:49.629 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:59:49.630 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Address", "t"."City", "t"."CountryId", "t"."CreatedById", "t"."CreatedDate", "t"."DeletedById", "t"."DeletionDate", "t"."IsDeleted", "t"."Name", "t"."UpdatedById", "t"."UpdatedDate", "c"."Id", "c"."Name", "w1"."Id", "w1"."CostPrice", "w1"."CreatedById", "w1"."CreatedDate", "w1"."DeletedById", "w1"."DeletionDate", "w1"."IsDeleted", "w1"."MSRPPrice", "w1"."Name", "w1"."Quantity", "w1"."SKU", "w1"."UpdatedById", "w1"."UpdatedDate", "w1"."WarehouseId"
FROM (
    SELECT "w"."Id", "w"."Address", "w"."City", "w"."CountryId", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."Name", "w"."UpdatedById", "w"."UpdatedDate", (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") AS "c"
    FROM "Warehouses" AS "w"
    WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
    ORDER BY (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") DESC
    LIMIT @__p_2 OFFSET @__p_1
) AS "t"
INNER JOIN "Country" AS "c" ON "t"."CountryId" = "c"."Id"
LEFT JOIN "WarehouseItem" AS "w1" ON "t"."Id" = "w1"."WarehouseId"
ORDER BY "t"."c" DESC, "t"."Id", "c"."Id"
2024-05-30 14:59:49.630 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Warehouses" AS "w"
WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
2024-05-30 14:59:49.630 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 14:59:49.630 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseController.Get (kaizenplus) in 2.3077ms
2024-05-30 14:59:49.630 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 14:59:49.630 +03:00 [INF] HTTP POST /api/Warehouse/search responded 200 in 2.4123 ms
2024-05-30 14:59:50.368 +03:00 [INF] CORS policy execution successful.
2024-05-30 14:59:50.368 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-30 14:59:50.369 +03:00 [INF] Route matched with {action = "GetUsers", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse`1[System.Collections.Generic.List`1[Coachyou.Services.Users.Models.UserOutput]]] GetUsers() on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-30 14:59:50.370 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 14:59:50.371 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Active", "u"."CreatedDate", "u"."DateOfBirth", "u"."Email", "u"."FirstName", "u"."IsVerified", "u"."LastLoginDate", "u"."LastName", "u"."PasswordHash", "u"."PasswordSalt", "u"."PhoneNumber", "u"."Picture", "u"."RefreshToken", "u"."RefreshTokenValidUntil", "u"."Username", "t"."UserId", "t"."RoleId", "t"."Id", "t"."Name"
FROM "Users" AS "u"
LEFT JOIN (
    SELECT "u0"."UserId", "u0"."RoleId", "r"."Id", "r"."Name"
    FROM "UserRoles" AS "u0"
    INNER JOIN "Roles" AS "r" ON "u0"."RoleId" = "r"."Id"
) AS "t" ON "u"."Id" = "t"."UserId"
WHERE ("u"."Id" <> @__userId_0) AND "u"."Active"
ORDER BY "u"."Id", "t"."UserId", "t"."RoleId"
2024-05-30 14:59:50.373 +03:00 [INF] Executing OkObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.Collections.Generic.List`1[[Coachyou.Services.Users.Models.UserOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-30 14:59:50.373 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.GetUsers (kaizenplus) in 4.7395ms
2024-05-30 14:59:50.373 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-30 14:59:50.373 +03:00 [INF] HTTP GET /api/Account/GetUsers responded 200 in 5.2626 ms
2024-05-30 15:02:46.994 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 15:02:47.120 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 15:02:47.130 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-05-30 15:02:47.143 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-05-30 15:02:47.167 +03:00 [INF] No migrations were applied. The database is already up to date.
2024-05-30 15:02:48.017 +03:00 [INF] HTTP GET /swagger/index.html responded 200 in 250.5829 ms
2024-05-30 15:17:44.633 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:17:44.644 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:17:44.818 +03:00 [WRN] Failed to determine the https port for redirect.
2024-05-30 15:17:44.824 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus)'
2024-05-30 15:17:44.851 +03:00 [INF] Route matched with {action = "Get", controller = "WarehouseItems"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemsOutput]] Get(kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemSearch) on controller kaizenplus.Controllers.WarehouseItemsController (kaizenplus).
2024-05-30 15:17:44.870 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 15:17:45.371 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "w"."Id", "w"."CostPrice", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."MSRPPrice", "w"."Name", "w"."Quantity", "w"."SKU", "w"."UpdatedById", "w"."UpdatedDate", "w"."WarehouseId", "w0"."Id", "w0"."Address", "w0"."City", "w0"."CountryId", "w0"."CreatedById", "w0"."CreatedDate", "w0"."DeletedById", "w0"."DeletionDate", "w0"."IsDeleted", "w0"."Name", "w0"."UpdatedById", "w0"."UpdatedDate"
FROM "WarehouseItem" AS "w"
INNER JOIN "Warehouses" AS "w0" ON "w"."WarehouseId" = "w0"."Id"
WHERE (NOT ("w"."IsDeleted") AND NOT ("w0"."IsDeleted")) AND (((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."SKU", @__search_Search_0) > 0)))
ORDER BY "w"."Quantity" DESC
LIMIT @__p_2 OFFSET @__p_1
2024-05-30 15:17:45.480 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "WarehouseItem" AS "w"
INNER JOIN "Warehouses" AS "w0" ON "w"."WarehouseId" = "w0"."Id"
WHERE (NOT ("w"."IsDeleted") AND NOT ("w0"."IsDeleted")) AND (((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."SKU", @__search_Search_0) > 0)))
2024-05-30 15:17:45.505 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemsOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 15:17:45.575 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus) in 719.0363ms
2024-05-30 15:17:45.576 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus)'
2024-05-30 15:17:45.576 +03:00 [INF] HTTP POST /api/WarehouseItems/search responded 200 in 759.5165 ms
2024-05-30 15:17:45.638 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:17:45.641 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:17:45.642 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 15:17:45.645 +03:00 [INF] Route matched with {action = "Get", controller = "Warehouse"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput]] Get(kaizenplus.Services.WarehouseServices.Models.WarehouseSearch) on controller kaizenplus.Controllers.WarehouseController (kaizenplus).
2024-05-30 15:17:45.692 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 15:17:45.769 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Address", "t"."City", "t"."CountryId", "t"."CreatedById", "t"."CreatedDate", "t"."DeletedById", "t"."DeletionDate", "t"."IsDeleted", "t"."Name", "t"."UpdatedById", "t"."UpdatedDate", "c"."Id", "c"."Name", "w1"."Id", "w1"."CostPrice", "w1"."CreatedById", "w1"."CreatedDate", "w1"."DeletedById", "w1"."DeletionDate", "w1"."IsDeleted", "w1"."MSRPPrice", "w1"."Name", "w1"."Quantity", "w1"."SKU", "w1"."UpdatedById", "w1"."UpdatedDate", "w1"."WarehouseId"
FROM (
    SELECT "w"."Id", "w"."Address", "w"."City", "w"."CountryId", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."Name", "w"."UpdatedById", "w"."UpdatedDate", (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") AS "c"
    FROM "Warehouses" AS "w"
    WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
    ORDER BY (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") DESC
    LIMIT @__p_2 OFFSET @__p_1
) AS "t"
INNER JOIN "Country" AS "c" ON "t"."CountryId" = "c"."Id"
LEFT JOIN "WarehouseItem" AS "w1" ON "t"."Id" = "w1"."WarehouseId"
ORDER BY "t"."c" DESC, "t"."Id", "c"."Id"
2024-05-30 15:17:45.781 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Warehouses" AS "w"
WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
2024-05-30 15:17:45.781 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 15:17:45.784 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseController.Get (kaizenplus) in 139.5731ms
2024-05-30 15:17:45.784 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 15:17:45.784 +03:00 [INF] HTTP POST /api/Warehouse/search responded 200 in 142.5196 ms
2024-05-30 15:17:46.622 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:17:46.622 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 15:17:46.622 +03:00 [INF] Route matched with {action = "Get", controller = "Warehouse"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput]] Get(kaizenplus.Services.WarehouseServices.Models.WarehouseSearch) on controller kaizenplus.Controllers.WarehouseController (kaizenplus).
2024-05-30 15:17:46.623 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 15:17:46.628 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Address", "t"."City", "t"."CountryId", "t"."CreatedById", "t"."CreatedDate", "t"."DeletedById", "t"."DeletionDate", "t"."IsDeleted", "t"."Name", "t"."UpdatedById", "t"."UpdatedDate", "c"."Id", "c"."Name", "w1"."Id", "w1"."CostPrice", "w1"."CreatedById", "w1"."CreatedDate", "w1"."DeletedById", "w1"."DeletionDate", "w1"."IsDeleted", "w1"."MSRPPrice", "w1"."Name", "w1"."Quantity", "w1"."SKU", "w1"."UpdatedById", "w1"."UpdatedDate", "w1"."WarehouseId"
FROM (
    SELECT "w"."Id", "w"."Address", "w"."City", "w"."CountryId", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."Name", "w"."UpdatedById", "w"."UpdatedDate", (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") AS "c"
    FROM "Warehouses" AS "w"
    WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
    ORDER BY (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") DESC
    LIMIT @__p_2 OFFSET @__p_1
) AS "t"
INNER JOIN "Country" AS "c" ON "t"."CountryId" = "c"."Id"
LEFT JOIN "WarehouseItem" AS "w1" ON "t"."Id" = "w1"."WarehouseId"
ORDER BY "t"."c" DESC, "t"."Id", "c"."Id"
2024-05-30 15:17:46.629 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Warehouses" AS "w"
WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
2024-05-30 15:17:46.630 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 15:17:46.630 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseController.Get (kaizenplus) in 7.616ms
2024-05-30 15:17:46.630 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 15:17:46.630 +03:00 [INF] HTTP POST /api/Warehouse/search responded 200 in 7.8728 ms
2024-05-30 15:18:20.283 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:18:20.290 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:18:20.291 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus)'
2024-05-30 15:18:20.291 +03:00 [INF] Route matched with {action = "Get", controller = "WarehouseItems"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemsOutput]] Get(kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemSearch) on controller kaizenplus.Controllers.WarehouseItemsController (kaizenplus).
2024-05-30 15:18:20.291 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 15:18:20.292 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "w"."Id", "w"."CostPrice", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."MSRPPrice", "w"."Name", "w"."Quantity", "w"."SKU", "w"."UpdatedById", "w"."UpdatedDate", "w"."WarehouseId", "w0"."Id", "w0"."Address", "w0"."City", "w0"."CountryId", "w0"."CreatedById", "w0"."CreatedDate", "w0"."DeletedById", "w0"."DeletionDate", "w0"."IsDeleted", "w0"."Name", "w0"."UpdatedById", "w0"."UpdatedDate"
FROM "WarehouseItem" AS "w"
INNER JOIN "Warehouses" AS "w0" ON "w"."WarehouseId" = "w0"."Id"
WHERE (NOT ("w"."IsDeleted") AND NOT ("w0"."IsDeleted")) AND (((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."SKU", @__search_Search_0) > 0)))
ORDER BY "w"."Quantity" DESC
LIMIT @__p_2 OFFSET @__p_1
2024-05-30 15:18:20.293 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "WarehouseItem" AS "w"
INNER JOIN "Warehouses" AS "w0" ON "w"."WarehouseId" = "w0"."Id"
WHERE (NOT ("w"."IsDeleted") AND NOT ("w0"."IsDeleted")) AND (((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."SKU", @__search_Search_0) > 0)))
2024-05-30 15:18:20.293 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemsOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 15:18:20.293 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus) in 2.6304ms
2024-05-30 15:18:20.293 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus)'
2024-05-30 15:18:20.293 +03:00 [INF] HTTP POST /api/WarehouseItems/search responded 200 in 2.7972 ms
2024-05-30 15:18:20.302 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:18:20.304 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:18:20.304 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 15:18:20.305 +03:00 [INF] Route matched with {action = "Get", controller = "Warehouse"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput]] Get(kaizenplus.Services.WarehouseServices.Models.WarehouseSearch) on controller kaizenplus.Controllers.WarehouseController (kaizenplus).
2024-05-30 15:18:20.307 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 15:18:20.309 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Address", "t"."City", "t"."CountryId", "t"."CreatedById", "t"."CreatedDate", "t"."DeletedById", "t"."DeletionDate", "t"."IsDeleted", "t"."Name", "t"."UpdatedById", "t"."UpdatedDate", "c"."Id", "c"."Name", "w1"."Id", "w1"."CostPrice", "w1"."CreatedById", "w1"."CreatedDate", "w1"."DeletedById", "w1"."DeletionDate", "w1"."IsDeleted", "w1"."MSRPPrice", "w1"."Name", "w1"."Quantity", "w1"."SKU", "w1"."UpdatedById", "w1"."UpdatedDate", "w1"."WarehouseId"
FROM (
    SELECT "w"."Id", "w"."Address", "w"."City", "w"."CountryId", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."Name", "w"."UpdatedById", "w"."UpdatedDate", (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") AS "c"
    FROM "Warehouses" AS "w"
    WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
    ORDER BY (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") DESC
    LIMIT @__p_2 OFFSET @__p_1
) AS "t"
INNER JOIN "Country" AS "c" ON "t"."CountryId" = "c"."Id"
LEFT JOIN "WarehouseItem" AS "w1" ON "t"."Id" = "w1"."WarehouseId"
ORDER BY "t"."c" DESC, "t"."Id", "c"."Id"
2024-05-30 15:18:20.310 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Warehouses" AS "w"
WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
2024-05-30 15:18:20.310 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 15:18:20.310 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseController.Get (kaizenplus) in 5.4472ms
2024-05-30 15:18:20.310 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 15:18:20.310 +03:00 [INF] HTTP POST /api/Warehouse/search responded 200 in 5.5703 ms
2024-05-30 15:18:49.039 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:18:49.044 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:18:49.044 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-30 15:18:49.045 +03:00 [INF] Route matched with {action = "GetUsers", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse`1[System.Collections.Generic.List`1[Coachyou.Services.Users.Models.UserOutput]]] GetUsers() on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-30 15:18:49.045 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 15:18:49.065 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Active", "u"."CreatedDate", "u"."DateOfBirth", "u"."Email", "u"."FirstName", "u"."IsVerified", "u"."LastLoginDate", "u"."LastName", "u"."PasswordHash", "u"."PasswordSalt", "u"."PhoneNumber", "u"."Picture", "u"."RefreshToken", "u"."RefreshTokenValidUntil", "u"."Username", "t"."UserId", "t"."RoleId", "t"."Id", "t"."Name"
FROM "Users" AS "u"
LEFT JOIN (
    SELECT "u0"."UserId", "u0"."RoleId", "r"."Id", "r"."Name"
    FROM "UserRoles" AS "u0"
    INNER JOIN "Roles" AS "r" ON "u0"."RoleId" = "r"."Id"
) AS "t" ON "u"."Id" = "t"."UserId"
WHERE ("u"."Id" <> @__userId_0) AND "u"."Active"
ORDER BY "u"."Id", "t"."UserId", "t"."RoleId"
2024-05-30 15:18:49.115 +03:00 [INF] Executing OkObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.Collections.Generic.List`1[[Coachyou.Services.Users.Models.UserOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-30 15:18:49.137 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.GetUsers (kaizenplus) in 92.5238ms
2024-05-30 15:18:49.137 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-30 15:18:49.138 +03:00 [INF] HTTP GET /api/Account/GetUsers responded 200 in 93.5587 ms
2024-05-30 15:19:36.184 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:19:36.189 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:19:36.189 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.Authenticate (kaizenplus)'
2024-05-30 15:19:36.194 +03:00 [INF] Route matched with {action = "Authenticate", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse`1[kaizenplus.Services.Users.Models.UserAuthenticateOutput]]] Authenticate(kaizenplus.Services.Users.Models.UserAuthenticateInput) on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-30 15:19:36.194 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 15:19:36.207 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__input_Username_0='?' (Size = 24)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Active", "t"."CreatedDate", "t"."DateOfBirth", "t"."Email", "t"."FirstName", "t"."IsVerified", "t"."LastLoginDate", "t"."LastName", "t"."PasswordHash", "t"."PasswordSalt", "t"."PhoneNumber", "t"."Picture", "t"."RefreshToken", "t"."RefreshTokenValidUntil", "t"."Username", "t0"."UserId", "t0"."RoleId", "t0"."Id", "t0"."Name"
FROM (
    SELECT "u"."Id", "u"."Active", "u"."CreatedDate", "u"."DateOfBirth", "u"."Email", "u"."FirstName", "u"."IsVerified", "u"."LastLoginDate", "u"."LastName", "u"."PasswordHash", "u"."PasswordSalt", "u"."PhoneNumber", "u"."Picture", "u"."RefreshToken", "u"."RefreshTokenValidUntil", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Username" = @__input_Username_0
    LIMIT 1
) AS "t"
LEFT JOIN (
    SELECT "u0"."UserId", "u0"."RoleId", "r"."Id", "r"."Name"
    FROM "UserRoles" AS "u0"
    INNER JOIN "Roles" AS "r" ON "u0"."RoleId" = "r"."Id"
) AS "t0" ON "t"."Id" = "t0"."UserId"
ORDER BY "t"."Id", "t0"."UserId", "t0"."RoleId"
2024-05-30 15:19:36.333 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p15='?' (DbType = Guid), @p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (Size = 24), @p4='?' (Size = 6), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime), @p7='?' (Size = 5), @p8='?' (Size = 64) (DbType = Binary), @p9='?' (Size = 128) (DbType = Binary), @p10='?' (Size = 11), @p11='?', @p12='?' (Size = 44), @p13='?' (DbType = DateTime), @p14='?' (Size = 24)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Users" SET "Active" = @p0, "CreatedDate" = @p1, "DateOfBirth" = @p2, "Email" = @p3, "FirstName" = @p4, "IsVerified" = @p5, "LastLoginDate" = @p6, "LastName" = @p7, "PasswordHash" = @p8, "PasswordSalt" = @p9, "PhoneNumber" = @p10, "Picture" = @p11, "RefreshToken" = @p12, "RefreshTokenValidUntil" = @p13, "Username" = @p14
WHERE "Id" = @p15;
SELECT changes();
2024-05-30 15:19:36.387 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (Size = 44), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Users" SET "RefreshToken" = @p0, "RefreshTokenValidUntil" = @p1
WHERE "Id" = @p2;
SELECT changes();
2024-05-30 15:19:36.390 +03:00 [INF] Executing OkObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Services.Users.Models.UserAuthenticateOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 15:19:36.393 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.Authenticate (kaizenplus) in 199.1361ms
2024-05-30 15:19:36.393 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.Authenticate (kaizenplus)'
2024-05-30 15:19:36.393 +03:00 [INF] HTTP POST /api/Account/authenticate responded 200 in 203.6431 ms
2024-05-30 15:19:38.326 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:19:38.331 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:19:38.332 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus)'
2024-05-30 15:19:38.332 +03:00 [INF] Route matched with {action = "Get", controller = "WarehouseItems"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemsOutput]] Get(kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemSearch) on controller kaizenplus.Controllers.WarehouseItemsController (kaizenplus).
2024-05-30 15:19:38.333 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 15:19:38.334 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "w"."Id", "w"."CostPrice", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."MSRPPrice", "w"."Name", "w"."Quantity", "w"."SKU", "w"."UpdatedById", "w"."UpdatedDate", "w"."WarehouseId", "w0"."Id", "w0"."Address", "w0"."City", "w0"."CountryId", "w0"."CreatedById", "w0"."CreatedDate", "w0"."DeletedById", "w0"."DeletionDate", "w0"."IsDeleted", "w0"."Name", "w0"."UpdatedById", "w0"."UpdatedDate"
FROM "WarehouseItem" AS "w"
INNER JOIN "Warehouses" AS "w0" ON "w"."WarehouseId" = "w0"."Id"
WHERE (NOT ("w"."IsDeleted") AND NOT ("w0"."IsDeleted")) AND (((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."SKU", @__search_Search_0) > 0)))
ORDER BY "w"."Quantity" DESC
LIMIT @__p_2 OFFSET @__p_1
2024-05-30 15:19:38.335 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "WarehouseItem" AS "w"
INNER JOIN "Warehouses" AS "w0" ON "w"."WarehouseId" = "w0"."Id"
WHERE (NOT ("w"."IsDeleted") AND NOT ("w0"."IsDeleted")) AND (((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."SKU", @__search_Search_0) > 0)))
2024-05-30 15:19:38.335 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemsOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 15:19:38.335 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus) in 3.5988ms
2024-05-30 15:19:38.335 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus)'
2024-05-30 15:19:38.335 +03:00 [INF] HTTP POST /api/WarehouseItems/search responded 200 in 3.8143 ms
2024-05-30 15:19:38.346 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:19:38.348 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:19:38.348 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 15:19:38.348 +03:00 [INF] Route matched with {action = "Get", controller = "Warehouse"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput]] Get(kaizenplus.Services.WarehouseServices.Models.WarehouseSearch) on controller kaizenplus.Controllers.WarehouseController (kaizenplus).
2024-05-30 15:19:38.348 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 15:19:38.349 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Address", "t"."City", "t"."CountryId", "t"."CreatedById", "t"."CreatedDate", "t"."DeletedById", "t"."DeletionDate", "t"."IsDeleted", "t"."Name", "t"."UpdatedById", "t"."UpdatedDate", "c"."Id", "c"."Name", "w1"."Id", "w1"."CostPrice", "w1"."CreatedById", "w1"."CreatedDate", "w1"."DeletedById", "w1"."DeletionDate", "w1"."IsDeleted", "w1"."MSRPPrice", "w1"."Name", "w1"."Quantity", "w1"."SKU", "w1"."UpdatedById", "w1"."UpdatedDate", "w1"."WarehouseId"
FROM (
    SELECT "w"."Id", "w"."Address", "w"."City", "w"."CountryId", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."Name", "w"."UpdatedById", "w"."UpdatedDate", (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") AS "c"
    FROM "Warehouses" AS "w"
    WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
    ORDER BY (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") DESC
    LIMIT @__p_2 OFFSET @__p_1
) AS "t"
INNER JOIN "Country" AS "c" ON "t"."CountryId" = "c"."Id"
LEFT JOIN "WarehouseItem" AS "w1" ON "t"."Id" = "w1"."WarehouseId"
ORDER BY "t"."c" DESC, "t"."Id", "c"."Id"
2024-05-30 15:19:38.350 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Warehouses" AS "w"
WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
2024-05-30 15:19:38.350 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 15:19:38.351 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseController.Get (kaizenplus) in 2.5118ms
2024-05-30 15:19:38.351 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 15:19:38.351 +03:00 [INF] HTTP POST /api/Warehouse/search responded 200 in 2.6602 ms
2024-05-30 15:19:40.682 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:19:40.682 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus)'
2024-05-30 15:19:40.682 +03:00 [INF] Route matched with {action = "Get", controller = "WarehouseItems"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemsOutput]] Get(kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemSearch) on controller kaizenplus.Controllers.WarehouseItemsController (kaizenplus).
2024-05-30 15:19:40.683 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 15:19:40.683 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "w"."Id", "w"."CostPrice", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."MSRPPrice", "w"."Name", "w"."Quantity", "w"."SKU", "w"."UpdatedById", "w"."UpdatedDate", "w"."WarehouseId", "w0"."Id", "w0"."Address", "w0"."City", "w0"."CountryId", "w0"."CreatedById", "w0"."CreatedDate", "w0"."DeletedById", "w0"."DeletionDate", "w0"."IsDeleted", "w0"."Name", "w0"."UpdatedById", "w0"."UpdatedDate"
FROM "WarehouseItem" AS "w"
INNER JOIN "Warehouses" AS "w0" ON "w"."WarehouseId" = "w0"."Id"
WHERE (NOT ("w"."IsDeleted") AND NOT ("w0"."IsDeleted")) AND (((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."SKU", @__search_Search_0) > 0)))
ORDER BY "w"."Quantity" DESC
LIMIT @__p_2 OFFSET @__p_1
2024-05-30 15:19:40.684 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "WarehouseItem" AS "w"
INNER JOIN "Warehouses" AS "w0" ON "w"."WarehouseId" = "w0"."Id"
WHERE (NOT ("w"."IsDeleted") AND NOT ("w0"."IsDeleted")) AND (((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."SKU", @__search_Search_0) > 0)))
2024-05-30 15:19:40.684 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemsOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 15:19:40.684 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus) in 1.6465ms
2024-05-30 15:19:40.684 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus)'
2024-05-30 15:19:40.684 +03:00 [INF] HTTP POST /api/WarehouseItems/search responded 200 in 1.7718 ms
2024-05-30 15:19:40.737 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:19:40.737 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 15:19:40.737 +03:00 [INF] Route matched with {action = "Get", controller = "Warehouse"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput]] Get(kaizenplus.Services.WarehouseServices.Models.WarehouseSearch) on controller kaizenplus.Controllers.WarehouseController (kaizenplus).
2024-05-30 15:19:40.738 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 15:19:40.738 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Address", "t"."City", "t"."CountryId", "t"."CreatedById", "t"."CreatedDate", "t"."DeletedById", "t"."DeletionDate", "t"."IsDeleted", "t"."Name", "t"."UpdatedById", "t"."UpdatedDate", "c"."Id", "c"."Name", "w1"."Id", "w1"."CostPrice", "w1"."CreatedById", "w1"."CreatedDate", "w1"."DeletedById", "w1"."DeletionDate", "w1"."IsDeleted", "w1"."MSRPPrice", "w1"."Name", "w1"."Quantity", "w1"."SKU", "w1"."UpdatedById", "w1"."UpdatedDate", "w1"."WarehouseId"
FROM (
    SELECT "w"."Id", "w"."Address", "w"."City", "w"."CountryId", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."Name", "w"."UpdatedById", "w"."UpdatedDate", (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") AS "c"
    FROM "Warehouses" AS "w"
    WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
    ORDER BY (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") DESC
    LIMIT @__p_2 OFFSET @__p_1
) AS "t"
INNER JOIN "Country" AS "c" ON "t"."CountryId" = "c"."Id"
LEFT JOIN "WarehouseItem" AS "w1" ON "t"."Id" = "w1"."WarehouseId"
ORDER BY "t"."c" DESC, "t"."Id", "c"."Id"
2024-05-30 15:19:40.739 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Warehouses" AS "w"
WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
2024-05-30 15:19:40.739 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 15:19:40.739 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseController.Get (kaizenplus) in 1.4889ms
2024-05-30 15:19:40.739 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 15:19:40.739 +03:00 [INF] HTTP POST /api/Warehouse/search responded 200 in 1.5827 ms
2024-05-30 15:19:42.468 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:19:42.472 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:19:42.472 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-30 15:19:42.472 +03:00 [INF] Route matched with {action = "GetUsers", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse`1[System.Collections.Generic.List`1[Coachyou.Services.Users.Models.UserOutput]]] GetUsers() on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-30 15:19:42.473 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 15:19:42.476 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Active", "u"."CreatedDate", "u"."DateOfBirth", "u"."Email", "u"."FirstName", "u"."IsVerified", "u"."LastLoginDate", "u"."LastName", "u"."PasswordHash", "u"."PasswordSalt", "u"."PhoneNumber", "u"."Picture", "u"."RefreshToken", "u"."RefreshTokenValidUntil", "u"."Username", "t"."UserId", "t"."RoleId", "t"."Id", "t"."Name"
FROM "Users" AS "u"
LEFT JOIN (
    SELECT "u0"."UserId", "u0"."RoleId", "r"."Id", "r"."Name"
    FROM "UserRoles" AS "u0"
    INNER JOIN "Roles" AS "r" ON "u0"."RoleId" = "r"."Id"
) AS "t" ON "u"."Id" = "t"."UserId"
WHERE ("u"."Id" <> @__userId_0) AND "u"."Active"
ORDER BY "u"."Id", "t"."UserId", "t"."RoleId"
2024-05-30 15:19:42.476 +03:00 [INF] Executing OkObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.Collections.Generic.List`1[[Coachyou.Services.Users.Models.UserOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-30 15:19:42.476 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.GetUsers (kaizenplus) in 4.2499ms
2024-05-30 15:19:42.476 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-30 15:19:42.477 +03:00 [INF] HTTP GET /api/Account/GetUsers responded 200 in 4.3941 ms
2024-05-30 15:21:34.099 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:21:34.108 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:21:34.109 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 15:21:34.109 +03:00 [INF] Route matched with {action = "Get", controller = "Warehouse"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput]] Get(kaizenplus.Services.WarehouseServices.Models.WarehouseSearch) on controller kaizenplus.Controllers.WarehouseController (kaizenplus).
2024-05-30 15:21:34.109 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 15:21:34.110 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Address", "t"."City", "t"."CountryId", "t"."CreatedById", "t"."CreatedDate", "t"."DeletedById", "t"."DeletionDate", "t"."IsDeleted", "t"."Name", "t"."UpdatedById", "t"."UpdatedDate", "c"."Id", "c"."Name", "w1"."Id", "w1"."CostPrice", "w1"."CreatedById", "w1"."CreatedDate", "w1"."DeletedById", "w1"."DeletionDate", "w1"."IsDeleted", "w1"."MSRPPrice", "w1"."Name", "w1"."Quantity", "w1"."SKU", "w1"."UpdatedById", "w1"."UpdatedDate", "w1"."WarehouseId"
FROM (
    SELECT "w"."Id", "w"."Address", "w"."City", "w"."CountryId", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."Name", "w"."UpdatedById", "w"."UpdatedDate", (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") AS "c"
    FROM "Warehouses" AS "w"
    WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
    ORDER BY (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") DESC
    LIMIT @__p_2 OFFSET @__p_1
) AS "t"
INNER JOIN "Country" AS "c" ON "t"."CountryId" = "c"."Id"
LEFT JOIN "WarehouseItem" AS "w1" ON "t"."Id" = "w1"."WarehouseId"
ORDER BY "t"."c" DESC, "t"."Id", "c"."Id"
2024-05-30 15:21:34.111 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Warehouses" AS "w"
WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
2024-05-30 15:21:34.111 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 15:21:34.111 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseController.Get (kaizenplus) in 2.1632ms
2024-05-30 15:21:34.111 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 15:21:34.111 +03:00 [INF] HTTP POST /api/Warehouse/search responded 200 in 2.2959 ms
2024-05-30 15:21:56.792 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:21:56.802 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:21:56.802 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus)'
2024-05-30 15:21:56.802 +03:00 [INF] Route matched with {action = "Get", controller = "WarehouseItems"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemsOutput]] Get(kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemSearch) on controller kaizenplus.Controllers.WarehouseItemsController (kaizenplus).
2024-05-30 15:21:56.803 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 15:21:56.804 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "w"."Id", "w"."CostPrice", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."MSRPPrice", "w"."Name", "w"."Quantity", "w"."SKU", "w"."UpdatedById", "w"."UpdatedDate", "w"."WarehouseId", "w0"."Id", "w0"."Address", "w0"."City", "w0"."CountryId", "w0"."CreatedById", "w0"."CreatedDate", "w0"."DeletedById", "w0"."DeletionDate", "w0"."IsDeleted", "w0"."Name", "w0"."UpdatedById", "w0"."UpdatedDate"
FROM "WarehouseItem" AS "w"
INNER JOIN "Warehouses" AS "w0" ON "w"."WarehouseId" = "w0"."Id"
WHERE (NOT ("w"."IsDeleted") AND NOT ("w0"."IsDeleted")) AND (((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."SKU", @__search_Search_0) > 0)))
ORDER BY "w"."Quantity" DESC
LIMIT @__p_2 OFFSET @__p_1
2024-05-30 15:21:56.804 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "WarehouseItem" AS "w"
INNER JOIN "Warehouses" AS "w0" ON "w"."WarehouseId" = "w0"."Id"
WHERE (NOT ("w"."IsDeleted") AND NOT ("w0"."IsDeleted")) AND (((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."SKU", @__search_Search_0) > 0)))
2024-05-30 15:21:56.804 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseItemServices.Models.WarehouseItemsOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 15:21:56.804 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus) in 1.9818ms
2024-05-30 15:21:56.805 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseItemsController.Get (kaizenplus)'
2024-05-30 15:21:56.805 +03:00 [INF] HTTP POST /api/WarehouseItems/search responded 200 in 2.1636 ms
2024-05-30 15:21:56.814 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:21:56.817 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:21:56.817 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 15:21:56.818 +03:00 [INF] Route matched with {action = "Get", controller = "Warehouse"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput]] Get(kaizenplus.Services.WarehouseServices.Models.WarehouseSearch) on controller kaizenplus.Controllers.WarehouseController (kaizenplus).
2024-05-30 15:21:56.821 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 15:21:56.822 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Address", "t"."City", "t"."CountryId", "t"."CreatedById", "t"."CreatedDate", "t"."DeletedById", "t"."DeletionDate", "t"."IsDeleted", "t"."Name", "t"."UpdatedById", "t"."UpdatedDate", "c"."Id", "c"."Name", "w1"."Id", "w1"."CostPrice", "w1"."CreatedById", "w1"."CreatedDate", "w1"."DeletedById", "w1"."DeletionDate", "w1"."IsDeleted", "w1"."MSRPPrice", "w1"."Name", "w1"."Quantity", "w1"."SKU", "w1"."UpdatedById", "w1"."UpdatedDate", "w1"."WarehouseId"
FROM (
    SELECT "w"."Id", "w"."Address", "w"."City", "w"."CountryId", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."Name", "w"."UpdatedById", "w"."UpdatedDate", (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") AS "c"
    FROM "Warehouses" AS "w"
    WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
    ORDER BY (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") DESC
    LIMIT @__p_2 OFFSET @__p_1
) AS "t"
INNER JOIN "Country" AS "c" ON "t"."CountryId" = "c"."Id"
LEFT JOIN "WarehouseItem" AS "w1" ON "t"."Id" = "w1"."WarehouseId"
ORDER BY "t"."c" DESC, "t"."Id", "c"."Id"
2024-05-30 15:21:56.823 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Warehouses" AS "w"
WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
2024-05-30 15:21:56.823 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 15:21:56.823 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseController.Get (kaizenplus) in 3.5971ms
2024-05-30 15:21:56.823 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 15:21:56.823 +03:00 [INF] HTTP POST /api/Warehouse/search responded 200 in 5.6004 ms
2024-05-30 15:22:13.897 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:22:13.908 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:22:13.908 +03:00 [INF] Executing endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 15:22:13.908 +03:00 [INF] Route matched with {action = "Get", controller = "Warehouse"}. Executing controller action with signature kaizenplus.Models.BaseResponse`1[kaizenplus.Models.PageOutput`1[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput]] Get(kaizenplus.Services.WarehouseServices.Models.WarehouseSearch) on controller kaizenplus.Controllers.WarehouseController (kaizenplus).
2024-05-30 15:22:13.909 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 15:22:13.909 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?', @__p_2='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Address", "t"."City", "t"."CountryId", "t"."CreatedById", "t"."CreatedDate", "t"."DeletedById", "t"."DeletionDate", "t"."IsDeleted", "t"."Name", "t"."UpdatedById", "t"."UpdatedDate", "c"."Id", "c"."Name", "w1"."Id", "w1"."CostPrice", "w1"."CreatedById", "w1"."CreatedDate", "w1"."DeletedById", "w1"."DeletionDate", "w1"."IsDeleted", "w1"."MSRPPrice", "w1"."Name", "w1"."Quantity", "w1"."SKU", "w1"."UpdatedById", "w1"."UpdatedDate", "w1"."WarehouseId"
FROM (
    SELECT "w"."Id", "w"."Address", "w"."City", "w"."CountryId", "w"."CreatedById", "w"."CreatedDate", "w"."DeletedById", "w"."DeletionDate", "w"."IsDeleted", "w"."Name", "w"."UpdatedById", "w"."UpdatedDate", (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") AS "c"
    FROM "Warehouses" AS "w"
    WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
    ORDER BY (
        SELECT COUNT(*)
        FROM "WarehouseItem" AS "w0"
        WHERE "w"."Id" = "w0"."WarehouseId") DESC
    LIMIT @__p_2 OFFSET @__p_1
) AS "t"
INNER JOIN "Country" AS "c" ON "t"."CountryId" = "c"."Id"
LEFT JOIN "WarehouseItem" AS "w1" ON "t"."Id" = "w1"."WarehouseId"
ORDER BY "t"."c" DESC, "t"."Id", "c"."Id"
2024-05-30 15:22:13.910 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__search_Search_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Warehouses" AS "w"
WHERE NOT ("w"."IsDeleted") AND ((((@__search_Search_0 = '') OR (instr("w"."Name", @__search_Search_0) > 0)) OR ((@__search_Search_0 = '') OR (instr("w"."Address", @__search_Search_0) > 0))) OR ((@__search_Search_0 = '') OR (instr("w"."City", @__search_Search_0) > 0)))
2024-05-30 15:22:13.910 +03:00 [INF] Executing ObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[kaizenplus.Models.PageOutput`1[[kaizenplus.Services.WarehouseServices.Models.WarehouseOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-05-30 15:22:13.910 +03:00 [INF] Executed action kaizenplus.Controllers.WarehouseController.Get (kaizenplus) in 1.7815ms
2024-05-30 15:22:13.910 +03:00 [INF] Executed endpoint 'kaizenplus.Controllers.WarehouseController.Get (kaizenplus)'
2024-05-30 15:22:13.910 +03:00 [INF] HTTP POST /api/Warehouse/search responded 200 in 1.9449 ms
2024-05-30 15:22:15.327 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:22:15.335 +03:00 [INF] CORS policy execution successful.
2024-05-30 15:22:15.335 +03:00 [INF] Executing endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-30 15:22:15.336 +03:00 [INF] Route matched with {action = "GetUsers", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[kaizenplus.Models.BaseResponse`1[System.Collections.Generic.List`1[Coachyou.Services.Users.Models.UserOutput]]] GetUsers() on controller Coachyou.Controllers.AccountController (kaizenplus).
2024-05-30 15:22:15.336 +03:00 [INF] Entity Framework Core 6.0.0 initialized 'DatabaseService' using provider 'Microsoft.EntityFrameworkCore.Sqlite:6.0.0' with options: None
2024-05-30 15:22:15.337 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Active", "u"."CreatedDate", "u"."DateOfBirth", "u"."Email", "u"."FirstName", "u"."IsVerified", "u"."LastLoginDate", "u"."LastName", "u"."PasswordHash", "u"."PasswordSalt", "u"."PhoneNumber", "u"."Picture", "u"."RefreshToken", "u"."RefreshTokenValidUntil", "u"."Username", "t"."UserId", "t"."RoleId", "t"."Id", "t"."Name"
FROM "Users" AS "u"
LEFT JOIN (
    SELECT "u0"."UserId", "u0"."RoleId", "r"."Id", "r"."Name"
    FROM "UserRoles" AS "u0"
    INNER JOIN "Roles" AS "r" ON "u0"."RoleId" = "r"."Id"
) AS "t" ON "u"."Id" = "t"."UserId"
WHERE ("u"."Id" <> @__userId_0) AND "u"."Active"
ORDER BY "u"."Id", "t"."UserId", "t"."RoleId"
2024-05-30 15:22:15.338 +03:00 [INF] Executing OkObjectResult, writing value of type 'kaizenplus.Models.BaseResponse`1[[System.Collections.Generic.List`1[[Coachyou.Services.Users.Models.UserOutput, kaizenplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-05-30 15:22:15.338 +03:00 [INF] Executed action Coachyou.Controllers.AccountController.GetUsers (kaizenplus) in 2.356ms
2024-05-30 15:22:15.338 +03:00 [INF] Executed endpoint 'Coachyou.Controllers.AccountController.GetUsers (kaizenplus)'
2024-05-30 15:22:15.338 +03:00 [INF] HTTP GET /api/Account/GetUsers responded 200 in 2.5801 ms
